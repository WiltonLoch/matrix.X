

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 23:52:07 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F628A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  008C                     	;# 
    87  008E                     	;# 
    88  0092                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009F                     	;# 
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  008C                     	;# 
   124  008E                     	;# 
   125  0092                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009F                     	;# 
   133                           
   134                           	psect	idataBANK1
   135  03F6                     __pidataBANK1:	
   136                           
   137                           ;initializer for _pause
   138  03F6  3401               	retlw	1
   139                           
   140                           ;initializer for _dir
   141  03F7  3402               	retlw	2
   142                           
   143                           ;initializer for _tamanho_kobra
   144  03F8  3401               	retlw	1
   145  001F                     _CMCON	set	31
   146  0029                     _RA1	set	41
   147  002A                     _RA2	set	42
   148  0028                     _RA0	set	40
   149  005B                     _RBIE	set	91
   150  0034                     _RB4	set	52
   151  0058                     _RBIF	set	88
   152  005F                     _GIE	set	95
   153  0086                     _TRISB	set	134
   154  0085                     _TRISA	set	133
   155                           
   156                           ; #config settings
   157  0000                     
   158                           	psect	cinit
   159  000B                     start_initialization:	
   160  000B                     __initialization:	
   161                           
   162                           ; Initialize objects allocated to BANK1
   163  000B  1683               	bsf	3,5	;RP0=1, select bank1
   164  000C  1303               	bcf	3,6	;RP1=0, select bank1
   165  000D  23F6               	fcall	__pidataBANK1	;fetch initializer
   166  000E  00EC               	movwf	__pdataBANK1& (0+127)
   167  000F  23F7               	fcall	__pidataBANK1+1	;fetch initializer
   168  0010  00ED               	movwf	(__pdataBANK1+1)& (0+127)
   169  0011  23F8               	fcall	__pidataBANK1+2	;fetch initializer
   170  0012  00EE               	movwf	(__pdataBANK1+2)& (0+127)
   171                           
   172                           ; Clear objects allocated to BANK0
   173  0013  1383               	bcf	3,7	;select IRP bank0
   174  0014  303D               	movlw	low __pbssBANK0
   175  0015  0084               	movwf	4
   176  0016  304D               	movlw	low (__pbssBANK0+16)
   177  0017  23EE               	fcall	clear_ram0
   178                           
   179                           ; Clear objects allocated to COMMON
   180  0018  01F8               	clrf	__pbssCOMMON& (0+127)
   181  0019  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   182  001A                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  001A                     __end_of__initialization:	
   186  001A  0183               	clrf	3
   187  001B  281C               	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMMON
   190  0078                     __pbssCOMMON:	
   191  0078                     _check:	
   192  0078                     	ds	1
   193  0079                     _inicio:	
   194  0079                     	ds	1
   195                           
   196                           	psect	bssBANK0
   197  003D                     __pbssBANK0:	
   198  003D                     desenharMatriz@F514:	
   199  003D                     	ds	8
   200  0045                     main@F499:	
   201  0045                     	ds	8
   202                           
   203                           	psect	dataBANK1
   204  00EC                     __pdataBANK1:	
   205  00EC                     _pause:	
   206  00EC                     	ds	1
   207  00ED                     _dir:	
   208  00ED                     	ds	1
   209  00EE                     _tamanho_kobra:	
   210  00EE                     	ds	1
   211                           
   212                           	psect	clrtext
   213  03EE                     clear_ram0:	
   214                           ;	Called with FSR containing the base address, and
   215                           ;	W with the last address+1
   216                           
   217  03EE  0064               	clrwdt	;clear the watchdog before getting into this loop
   218  03EF                     clrloop0:	
   219  03EF  0180               	clrf	0	;clear RAM location pointed to by FSR
   220  03F0  0A84               	incf	4,f	;increment pointer
   221  03F1  0604               	xorwf	4,w	;XOR with final address
   222  03F2  1903               	btfsc	3,2	;have we reached the end yet?
   223  03F3  3400               	retlw	0	;all done for this memory range, return
   224  03F4  0604               	xorwf	4,w	;XOR again to restore value
   225  03F5  2BEF               	goto	clrloop0	;do the next byte
   226                           
   227                           	psect	cstackBANK1
   228  00A0                     __pcstackBANK1:	
   229  00A0                     main@kobra:	
   230                           
   231                           ; 64 bytes @ 0x0
   232  00A0                     	ds	64
   233  00E0                     main@mapa:	
   234                           
   235                           ; 8 bytes @ 0x40
   236  00E0                     	ds	8
   237  00E8                     main@semente:	
   238                           
   239                           ; 1 bytes @ 0x48
   240  00E8                     	ds	1
   241  00E9                     main@ovo:	
   242                           
   243                           ; 2 bytes @ 0x49
   244  00E9                     	ds	2
   245  00EB                     main@i:	
   246                           
   247                           ; 1 bytes @ 0x4B
   248  00EB                     	ds	1
   249                           
   250                           	psect	cstackCOMMON
   251  0070                     __pcstackCOMMON:	
   252  0070                     ?_inicializarDisplay:	
   253  0070                     ?_desenharMatriz:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_finalizarEnvio:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_echo:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_echo:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 1 bytes @ 0x0
   270  0070                     	ds	4
   271  0074                     ?_renderizar:	
   272  0074                     ?_inicializarJogo:	
   273                           ; 1 bytes @ 0x4
   274                           
   275  0074                     ??_finalizarEnvio:	
   276                           ; 1 bytes @ 0x4
   277                           
   278  0074                     ?___awdiv:	
   279                           ; 1 bytes @ 0x4
   280                           
   281  0074                     inicializarJogo@ovo:	
   282                           ; 2 bytes @ 0x4
   283                           
   284  0074                     renderizar@aux:	
   285                           ; 1 bytes @ 0x4
   286                           
   287  0074                     ___awdiv@divisor:	
   288                           ; 2 bytes @ 0x4
   289                           
   290                           
   291                           ; 2 bytes @ 0x4
   292  0074                     	ds	1
   293  0075                     ?_enviarParaDisplay:	
   294  0075                     inicializarJogo@kobra:	
   295                           ; 1 bytes @ 0x5
   296                           
   297  0075                     enviarParaDisplay@parteBaixa:	
   298                           ; 1 bytes @ 0x5
   299                           
   300                           
   301                           ; 1 bytes @ 0x5
   302  0075                     	ds	1
   303  0076                     ??_inicializarJogo:	
   304  0076                     ??_enviarParaDisplay:	
   305                           ; 1 bytes @ 0x6
   306                           
   307  0076                     renderizar@mapa:	
   308                           ; 1 bytes @ 0x6
   309                           
   310  0076                     ___awdiv@dividend:	
   311                           ; 1 bytes @ 0x6
   312                           
   313                           
   314                           ; 2 bytes @ 0x6
   315  0076                     	ds	1
   316  0077                     inicializarJogo@mapa:	
   317                           
   318                           ; 1 bytes @ 0x7
   319  0077                     	ds	1
   320                           
   321                           	psect	cstackBANK0
   322  0020                     __pcstackBANK0:	
   323  0020                     ??_renderizar:	
   324  0020                     ??___awdiv:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0020                     enviarParaDisplay@temp:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0020                     	ds	1
   333  0021                     enviarParaDisplay@temp_130:	
   334  0021                     ___awdiv@counter:	
   335                           ; 1 bytes @ 0x1
   336                           
   337                           
   338                           ; 1 bytes @ 0x1
   339  0021                     	ds	1
   340  0022                     ___awdiv@sign:	
   341  0022                     enviarParaDisplay@i:	
   342                           ; 1 bytes @ 0x2
   343                           
   344                           
   345                           ; 2 bytes @ 0x2
   346  0022                     	ds	1
   347  0023                     ___awdiv@quotient:	
   348                           
   349                           ; 2 bytes @ 0x3
   350  0023                     	ds	1
   351  0024                     enviarParaDisplay@i_129:	
   352                           
   353                           ; 2 bytes @ 0x4
   354  0024                     	ds	2
   355  0026                     enviarParaDisplay@parteAlta:	
   356                           
   357                           ; 1 bytes @ 0x6
   358  0026                     	ds	1
   359  0027                     ??_inicializarDisplay:	
   360  0027                     ??_desenharMatriz:	
   361                           ; 1 bytes @ 0x7
   362                           
   363                           
   364                           ; 1 bytes @ 0x7
   365  0027                     	ds	6
   366  002D                     desenharMatriz@temp:	
   367                           
   368                           ; 8 bytes @ 0xD
   369  002D                     	ds	8
   370  0035                     desenharMatriz@vetor:	
   371                           
   372                           ; 1 bytes @ 0x15
   373  0035                     	ds	1
   374  0036                     desenharMatriz@indice:	
   375                           
   376                           ; 1 bytes @ 0x16
   377  0036                     	ds	1
   378  0037                     desenharMatriz@i:	
   379                           
   380                           ; 1 bytes @ 0x17
   381  0037                     	ds	1
   382  0038                     desenharMatriz@j:	
   383                           
   384                           ; 1 bytes @ 0x18
   385  0038                     	ds	1
   386  0039                     desenharMatriz@i_123:	
   387                           
   388                           ; 1 bytes @ 0x19
   389  0039                     	ds	1
   390  003A                     ??_main:	
   391                           
   392                           ; 1 bytes @ 0x1A
   393  003A                     	ds	3
   394                           
   395                           	psect	maintext
   396  001C                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 53 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  kobra          64    0[BANK1 ] struct .[32]
   407 ;;  mapa            8   64[BANK1 ] unsigned char [8]
   408 ;;  ovo             2   73[BANK1 ] struct .
   409 ;;  i               1   75[BANK1 ] unsigned char 
   410 ;;  semente         1   72[BANK1 ] unsigned char 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   420 ;;      Params:         0       0       0       0
   421 ;;      Locals:         0       0      76       0
   422 ;;      Temps:          0       3       0       0
   423 ;;      Totals:         0       3      76       0
   424 ;;Total ram usage:       79 bytes
   425 ;; Hardware stack levels required when called:    4
   426 ;; This function calls:
   427 ;;		___awdiv
   428 ;;		_desenharMatriz
   429 ;;		_inicializarDisplay
   430 ;;		_inicializarJogo
   431 ;;		_renderizar
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _main
   439  001C                     _main:	
   440  001C                     l1441:	
   441                           ;incstack = 0
   442                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   443                           
   444                           
   445                           ;main.c: 54:         0b00000000,;main.c: 55:         0b00000000,;main.c: 56:         0b0
      +                          0000000,;main.c: 57:         0b00000000;main.c: 59: 
   446  001C  3007               	movlw	7
   447  001D  1283               	bcf	3,5	;RP0=0, select bank0
   448  001E  1303               	bcf	3,6	;RP1=0, select bank0
   449  001F  009F               	movwf	31	;volatile
   450  0020                     l1443:	
   451                           
   452                           ;main.c: 60:     inicializarDisplay();
   453  0020  1683               	bsf	3,5	;RP0=1, select bank1
   454  0021  1303               	bcf	3,6	;RP1=0, select bank1
   455  0022  0185               	clrf	5	;volatile
   456  0023                     l1445:	
   457                           
   458                           ;main.c: 61: 
   459  0023  3010               	movlw	16
   460  0024  0086               	movwf	6	;volatile
   461  0025                     l1447:	
   462                           
   463                           ;main.c: 63:         if(!pause) {
   464  0025  178B               	bsf	11,7	;volatile
   465  0026                     l1449:	
   466                           
   467                           ;main.c: 64:             if(kobra[0].i == ovo.i && kobra[0].j == ovo.j){
   468  0026  100B               	bcf	11,0	;volatile
   469  0027                     l1451:	
   470                           
   471                           ;main.c: 65:                 tamanho_kobra++;
   472  0027  158B               	bsf	11,3	;volatile
   473  0028                     l1453:	
   474                           
   475                           ;main.c: 67:                 ovo.i = semente/8;
   476  0028  30E0               	movlw	main@mapa& (0+255)
   477  0029  0084               	movwf	4
   478  002A  3008               	movlw	8
   479  002B  00FF               	movwf	btemp+1
   480  002C                     u930:	
   481  002C  1383               	bcf	3,7	;select IRP bank1
   482  002D  0180               	clrf	0
   483  002E  0A84               	incf	4,f
   484  002F  0BFF               	decfsz	btemp+1,f
   485  0030  282C               	goto	u930
   486  0031                     l1455:	
   487                           
   488                           ;main.c: 78:             for(i = tamanho_kobra - 1; i > 0; --i) {
   489  0031  23D3               	fcall	_inicializarDisplay
   490  0032                     l1457:	
   491                           
   492                           ;main.c: 81:             }
   493  0032  1683               	bsf	3,5	;RP0=1, select bank1
   494  0033  1303               	bcf	3,6	;RP1=0, select bank1
   495  0034  086C               	movf	_pause^(0+128),w
   496  0035  1D03               	btfss	3,2
   497  0036  2838               	goto	u941
   498  0037  2839               	goto	u940
   499  0038                     u941:	
   500  0038  29A7               	goto	l1531
   501  0039                     u940:	
   502  0039                     l1459:	
   503                           
   504                           ;main.c: 82: 
   505  0039  0820               	movf	main@kobra^(0+128),w
   506  003A  0669               	xorwf	main@ovo^(0+128),w
   507  003B  1D03               	skipz
   508  003C  283E               	goto	u951
   509  003D  283F               	goto	u950
   510  003E                     u951:	
   511  003E  287E               	goto	l1469
   512  003F                     u950:	
   513  003F                     l1461:	
   514  003F  0821               	movf	(main@kobra^(0+128)+1),w
   515  0040  066A               	xorwf	(main@ovo^(0+128)+1),w
   516  0041  1D03               	skipz
   517  0042  2844               	goto	u961
   518  0043  2845               	goto	u960
   519  0044                     u961:	
   520  0044  287E               	goto	l1469
   521  0045                     u960:	
   522  0045                     l1463:	
   523                           
   524                           ;main.c: 83:             switch(dir) {
   525  0045  3001               	movlw	1
   526  0046  1283               	bcf	3,5	;RP0=0, select bank0
   527  0047  1303               	bcf	3,6	;RP1=0, select bank0
   528  0048  00BA               	movwf	??_main
   529  0049  083A               	movf	??_main,w
   530  004A  1683               	bsf	3,5	;RP0=1, select bank1
   531  004B  1303               	bcf	3,6	;RP1=0, select bank1
   532  004C  07EE               	addwf	_tamanho_kobra^(0+128),f
   533                           
   534                           ;main.c: 84:                 case 0x00: kobra[0].i = (--kobra[0].i)%8; break;
   535  004D  0921               	comf	(main@kobra^(0+128)+1),w
   536  004E  0468               	iorwf	main@semente^(0+128),w
   537  004F  1283               	bcf	3,5	;RP0=0, select bank0
   538  0050  1303               	bcf	3,6	;RP1=0, select bank0
   539  0051  00BA               	movwf	??_main
   540  0052  1683               	bsf	3,5	;RP0=1, select bank1
   541  0053  1303               	bcf	3,6	;RP1=0, select bank1
   542  0054  0820               	movf	main@kobra^(0+128),w
   543  0055  0468               	iorwf	main@semente^(0+128),w
   544  0056  1283               	bcf	3,5	;RP0=0, select bank0
   545  0057  1303               	bcf	3,6	;RP1=0, select bank0
   546  0058  053A               	andwf	??_main,w
   547  0059  393F               	andlw	63
   548  005A  00BB               	movwf	??_main+1
   549  005B  083B               	movf	??_main+1,w
   550  005C  1683               	bsf	3,5	;RP0=1, select bank1
   551  005D  1303               	bcf	3,6	;RP1=0, select bank1
   552  005E  00E8               	movwf	main@semente^(0+128)
   553  005F                     l1465:	
   554                           
   555                           ;main.c: 85:                 case 0x01: kobra[0].j = (++kobra[0].j)%8; break;
   556  005F  3008               	movlw	8
   557  0060  00F4               	movwf	___awdiv@divisor
   558  0061  3000               	movlw	0
   559  0062  00F5               	movwf	___awdiv@divisor+1
   560  0063  0868               	movf	main@semente^(0+128),w
   561  0064  1283               	bcf	3,5	;RP0=0, select bank0
   562  0065  1303               	bcf	3,6	;RP1=0, select bank0
   563  0066  00BA               	movwf	??_main
   564  0067  01BB               	clrf	??_main+1
   565  0068  083A               	movf	??_main,w
   566  0069  00F6               	movwf	___awdiv@dividend
   567  006A  083B               	movf	??_main+1,w
   568  006B  00F7               	movwf	___awdiv@dividend+1
   569  006C  22D6               	fcall	___awdiv
   570  006D  0874               	movf	?___awdiv,w
   571  006E  1283               	bcf	3,5	;RP0=0, select bank0
   572  006F  1303               	bcf	3,6	;RP1=0, select bank0
   573  0070  00BC               	movwf	??_main+2
   574  0071  083C               	movf	??_main+2,w
   575  0072  1683               	bsf	3,5	;RP0=1, select bank1
   576  0073  1303               	bcf	3,6	;RP1=0, select bank1
   577  0074  00E9               	movwf	main@ovo^(0+128)
   578  0075                     l1467:	
   579                           
   580                           ;main.c: 86:                 case 0x02: kobra[0].i = (++kobra[0].i)%8; break;
   581  0075  0868               	movf	main@semente^(0+128),w
   582  0076  3907               	andlw	7
   583  0077  1283               	bcf	3,5	;RP0=0, select bank0
   584  0078  1303               	bcf	3,6	;RP1=0, select bank0
   585  0079  00BA               	movwf	??_main
   586  007A  083A               	movf	??_main,w
   587  007B  1683               	bsf	3,5	;RP0=1, select bank1
   588  007C  1303               	bcf	3,6	;RP1=0, select bank1
   589  007D  00EA               	movwf	(main@ovo^(0+128)+1)
   590  007E                     l1469:	
   591                           
   592                           ;main.c: 89: 
   593  007E  01EB               	clrf	main@i^(0+128)
   594  007F  0AEB               	incf	main@i^(0+128),f
   595  0080  28A5               	goto	l1479
   596  0081                     l1471:	
   597                           
   598                           ;main.c: 90:             renderizar(mapa, ovo);
   599  0081  1403               	setc
   600  0082  0D6B               	rlf	main@i^(0+128),w
   601  0083  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   602  0084  0084               	movwf	4
   603  0085  1383               	bcf	3,7	;select IRP bank1
   604  0086  0800               	movf	0,w
   605  0087  0621               	xorwf	(main@kobra^(0+128)+1),w
   606  0088  1D03               	skipz
   607  0089  288B               	goto	u971
   608  008A  288C               	goto	u970
   609  008B                     u971:	
   610  008B  289D               	goto	l1477
   611  008C                     u970:	
   612  008C                     l1473:	
   613  008C  086B               	movf	main@i^(0+128),w
   614  008D  1283               	bcf	3,5	;RP0=0, select bank0
   615  008E  1303               	bcf	3,6	;RP1=0, select bank0
   616  008F  00BA               	movwf	??_main
   617  0090  073A               	addwf	??_main,w
   618  0091  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   619  0092  0084               	movwf	4
   620  0093  0800               	movf	0,w
   621  0094  1683               	bsf	3,5	;RP0=1, select bank1
   622  0095  1303               	bcf	3,6	;RP1=0, select bank1
   623  0096  0620               	xorwf	main@kobra^(0+128),w
   624  0097  1D03               	skipz
   625  0098  289A               	goto	u981
   626  0099  289B               	goto	u980
   627  009A                     u981:	
   628  009A  289D               	goto	l1477
   629  009B                     u980:	
   630  009B                     l1475:	
   631  009B  01EC               	clrf	_pause^(0+128)
   632  009C  0AEC               	incf	_pause^(0+128),f
   633  009D                     l1477:	
   634  009D  3001               	movlw	1
   635  009E  1283               	bcf	3,5	;RP0=0, select bank0
   636  009F  1303               	bcf	3,6	;RP1=0, select bank0
   637  00A0  00BA               	movwf	??_main
   638  00A1  083A               	movf	??_main,w
   639  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   640  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   641  00A4  07EB               	addwf	main@i^(0+128),f
   642  00A5                     l1479:	
   643  00A5  086E               	movf	_tamanho_kobra^(0+128),w
   644  00A6  026B               	subwf	main@i^(0+128),w
   645  00A7  1C03               	skipc
   646  00A8  28AA               	goto	u991
   647  00A9  28AB               	goto	u990
   648  00AA                     u991:	
   649  00AA  2881               	goto	l1471
   650  00AB                     u990:	
   651  00AB                     l1481:	
   652                           
   653                           ;main.c: 92:             _delay((unsigned long)((200)*(4000000/4000.0)));
   654  00AB  01EB               	clrf	main@i^(0+128)
   655  00AC  28C4               	goto	l1487
   656  00AD                     l1483:	
   657                           
   658                           ;main.c: 93: 
   659  00AD  086B               	movf	main@i^(0+128),w
   660  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   661  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   662  00B0  00BA               	movwf	??_main
   663  00B1  073A               	addwf	??_main,w
   664  00B2  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   665  00B3  0084               	movwf	4
   666  00B4  1383               	bcf	3,7	;select IRP bank1
   667  00B5  0800               	movf	0,w
   668  00B6  00F4               	movwf	renderizar@aux
   669  00B7  0A84               	incf	4,f
   670  00B8  0800               	movf	0,w
   671  00B9  00F5               	movwf	renderizar@aux+1
   672  00BA  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   673  00BB  23B7               	fcall	_renderizar
   674  00BC                     l1485:	
   675                           
   676                           ;main.c: 94:             semente += kobra[0].i * 8 + kobra[0].j;
   677  00BC  3001               	movlw	1
   678  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   679  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   680  00BF  00BA               	movwf	??_main
   681  00C0  083A               	movf	??_main,w
   682  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   683  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   684  00C3  07EB               	addwf	main@i^(0+128),f
   685  00C4                     l1487:	
   686  00C4  086E               	movf	_tamanho_kobra^(0+128),w
   687  00C5  026B               	subwf	main@i^(0+128),w
   688  00C6  1C03               	skipc
   689  00C7  28C9               	goto	u1001
   690  00C8  28CA               	goto	u1000
   691  00C9                     u1001:	
   692  00C9  28AD               	goto	l1483
   693  00CA                     u1000:	
   694  00CA                     l1489:	
   695                           
   696                           ;main.c: 96:                 mapa[i] = 0b0;
   697  00CA  086E               	movf	_tamanho_kobra^(0+128),w
   698  00CB  3EFF               	addlw	255
   699  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   700  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   701  00CE  00BA               	movwf	??_main
   702  00CF  083A               	movf	??_main,w
   703  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   704  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   705  00D2  00EB               	movwf	main@i^(0+128)
   706  00D3  086B               	movf	main@i^(0+128),w
   707  00D4  1D03               	btfss	3,2
   708  00D5  28D7               	goto	u1011
   709  00D6  28D8               	goto	u1010
   710  00D7                     u1011:	
   711  00D7  28D9               	goto	l1493
   712  00D8                     u1010:	
   713  00D8  294B               	goto	l1509
   714  00D9                     l1493:	
   715                           
   716                           ;main.c: 97:         } else {
   717  00D9  086B               	movf	main@i^(0+128),w
   718  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   719  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   720  00DC  00BA               	movwf	??_main
   721  00DD  073A               	addwf	??_main,w
   722  00DE  3EFE               	addlw	254
   723  00DF  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   724  00E0  0084               	movwf	4
   725  00E1  1383               	bcf	3,7	;select IRP bank1
   726  00E2  0800               	movf	0,w
   727  00E3  00BB               	movwf	??_main+1
   728  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   729  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   730  00E6  086B               	movf	main@i^(0+128),w
   731  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   732  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   733  00E9  00BC               	movwf	??_main+2
   734  00EA  073C               	addwf	??_main+2,w
   735  00EB  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   736  00EC  0084               	movwf	4
   737  00ED  083B               	movf	??_main+1,w
   738  00EE  0080               	movwf	0
   739                           
   740                           ;main.c: 98:             inicializarJogo(mapa, &ovo, kobra);
   741  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   742  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   743  00F1  086B               	movf	main@i^(0+128),w
   744  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   745  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   746  00F4  00BA               	movwf	??_main
   747  00F5  073A               	addwf	??_main,w
   748  00F6  3EFF               	addlw	255
   749  00F7  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   750  00F8  0084               	movwf	4
   751  00F9  0800               	movf	0,w
   752  00FA  00BB               	movwf	??_main+1
   753  00FB  1403               	setc
   754  00FC  1683               	bsf	3,5	;RP0=1, select bank1
   755  00FD  1303               	bcf	3,6	;RP1=0, select bank1
   756  00FE  0D6B               	rlf	main@i^(0+128),w
   757  00FF  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   758  0100  0084               	movwf	4
   759  0101  1283               	bcf	3,5	;RP0=0, select bank0
   760  0102  1303               	bcf	3,6	;RP1=0, select bank0
   761  0103  083B               	movf	??_main+1,w
   762  0104  0080               	movwf	0
   763  0105                     l1495:	
   764                           
   765                           ;main.c: 99:             mapa[0] = 0b00000011;
   766  0105  3001               	movlw	1
   767  0106  1683               	bsf	3,5	;RP0=1, select bank1
   768  0107  1303               	bcf	3,6	;RP1=0, select bank1
   769  0108  02EB               	subwf	main@i^(0+128),f
   770  0109                     l1497:	
   771  0109  086B               	movf	main@i^(0+128),w
   772  010A  1D03               	btfss	3,2
   773  010B  290D               	goto	u1021
   774  010C  290E               	goto	u1020
   775  010D                     u1021:	
   776  010D  28D9               	goto	l1493
   777  010E                     u1020:	
   778  010E  294B               	goto	l1509
   779  010F                     l1499:	
   780  010F  3001               	movlw	1
   781  0110  1683               	bsf	3,5	;RP0=1, select bank1
   782  0111  1303               	bcf	3,6	;RP1=0, select bank1
   783  0112  02A0               	subwf	main@kobra^(0+128),f
   784  0113  0820               	movf	main@kobra^(0+128),w
   785  0114  3907               	andlw	7
   786  0115  1283               	bcf	3,5	;RP0=0, select bank0
   787  0116  1303               	bcf	3,6	;RP1=0, select bank0
   788  0117  00BA               	movwf	??_main
   789  0118  083A               	movf	??_main,w
   790  0119  1683               	bsf	3,5	;RP0=1, select bank1
   791  011A  1303               	bcf	3,6	;RP1=0, select bank1
   792  011B  00A0               	movwf	main@kobra^(0+128)
   793  011C  2963               	goto	l1511
   794  011D                     l1501:	
   795  011D  3001               	movlw	1
   796  011E  00BA               	movwf	??_main
   797  011F  083A               	movf	??_main,w
   798  0120  1683               	bsf	3,5	;RP0=1, select bank1
   799  0121  1303               	bcf	3,6	;RP1=0, select bank1
   800  0122  07A1               	addwf	(main@kobra^(0+128)+1),f
   801  0123  0821               	movf	(main@kobra^(0+128)+1),w
   802  0124  3907               	andlw	7
   803  0125  1283               	bcf	3,5	;RP0=0, select bank0
   804  0126  1303               	bcf	3,6	;RP1=0, select bank0
   805  0127  00BB               	movwf	??_main+1
   806  0128  083B               	movf	??_main+1,w
   807  0129  1683               	bsf	3,5	;RP0=1, select bank1
   808  012A  1303               	bcf	3,6	;RP1=0, select bank1
   809  012B  00A1               	movwf	(main@kobra^(0+128)+1)
   810  012C  2963               	goto	l1511
   811  012D                     l1503:	
   812  012D  3001               	movlw	1
   813  012E  00BA               	movwf	??_main
   814  012F  083A               	movf	??_main,w
   815  0130  1683               	bsf	3,5	;RP0=1, select bank1
   816  0131  1303               	bcf	3,6	;RP1=0, select bank1
   817  0132  07A0               	addwf	main@kobra^(0+128),f
   818  0133  0820               	movf	main@kobra^(0+128),w
   819  0134  3907               	andlw	7
   820  0135  1283               	bcf	3,5	;RP0=0, select bank0
   821  0136  1303               	bcf	3,6	;RP1=0, select bank0
   822  0137  00BB               	movwf	??_main+1
   823  0138  083B               	movf	??_main+1,w
   824  0139  1683               	bsf	3,5	;RP0=1, select bank1
   825  013A  1303               	bcf	3,6	;RP1=0, select bank1
   826  013B  00A0               	movwf	main@kobra^(0+128)
   827  013C  2963               	goto	l1511
   828  013D                     l1505:	
   829  013D  3001               	movlw	1
   830  013E  1683               	bsf	3,5	;RP0=1, select bank1
   831  013F  1303               	bcf	3,6	;RP1=0, select bank1
   832  0140  02A1               	subwf	(main@kobra^(0+128)+1),f
   833  0141  0821               	movf	(main@kobra^(0+128)+1),w
   834  0142  3907               	andlw	7
   835  0143  1283               	bcf	3,5	;RP0=0, select bank0
   836  0144  1303               	bcf	3,6	;RP1=0, select bank0
   837  0145  00BA               	movwf	??_main
   838  0146  083A               	movf	??_main,w
   839  0147  1683               	bsf	3,5	;RP0=1, select bank1
   840  0148  1303               	bcf	3,6	;RP1=0, select bank1
   841  0149  00A1               	movwf	(main@kobra^(0+128)+1)
   842  014A  2963               	goto	l1511
   843  014B                     l1509:	
   844  014B  086D               	movf	_dir^(0+128),w
   845  014C  1283               	bcf	3,5	;RP0=0, select bank0
   846  014D  1303               	bcf	3,6	;RP1=0, select bank0
   847  014E  00BA               	movwf	??_main
   848  014F  01BB               	clrf	??_main+1
   849                           
   850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   851                           ; Switch size 1, requested type "simple"
   852                           ; Number of cases is 1, Range of values is 0 to 0
   853                           ; switch strategies available:
   854                           ; Name         Instructions Cycles
   855                           ; simple_byte            4     3 (average)
   856                           ; direct_byte            7     6 (fixed)
   857                           ; jumptable            260     6 (fixed)
   858                           ;	Chosen strategy is simple_byte
   859  0150  083B               	movf	??_main+1,w
   860  0151  3A00               	xorlw	0	; case 0
   861  0152  1903               	skipnz
   862  0153  2955               	goto	l1587
   863  0154  2963               	goto	l1511
   864  0155                     l1587:	
   865                           
   866                           ; Switch size 1, requested type "simple"
   867                           ; Number of cases is 4, Range of values is 0 to 3
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; direct_byte           10     6 (fixed)
   871                           ; simple_byte           13     7 (average)
   872                           ; jumptable            260     6 (fixed)
   873                           ;	Chosen strategy is simple_byte
   874  0155  083A               	movf	??_main,w
   875  0156  3A00               	xorlw	0	; case 0
   876  0157  1903               	skipnz
   877  0158  290F               	goto	l1499
   878  0159  3A01               	xorlw	1	; case 1
   879  015A  1903               	skipnz
   880  015B  291D               	goto	l1501
   881  015C  3A03               	xorlw	3	; case 2
   882  015D  1903               	skipnz
   883  015E  292D               	goto	l1503
   884  015F  3A01               	xorlw	1	; case 3
   885  0160  1903               	skipnz
   886  0161  293D               	goto	l1505
   887  0162  2963               	goto	l1511
   888  0163                     l1511:	
   889                           
   890                           ;main.c: 108:         }
   891  0163  1683               	bsf	3,5	;RP0=1, select bank1
   892  0164  1303               	bcf	3,6	;RP1=0, select bank1
   893  0165  086A               	movf	(main@ovo+1)^(0+128),w
   894  0166  00F5               	movwf	renderizar@aux+1
   895  0167  0869               	movf	main@ovo^(0+128),w
   896  0168  00F4               	movwf	renderizar@aux
   897  0169  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   898  016A  23B7               	fcall	_renderizar
   899  016B                     l1513:	
   900                           
   901                           ;main.c: 109:     }
   902  016B  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   903  016C  226B               	fcall	_desenharMatriz
   904  016D                     l1515:	
   905                           
   906                           ;main.c: 110:     return;
   907  016D  3002               	movlw	2
   908  016E  1283               	bcf	3,5	;RP0=0, select bank0
   909  016F  1303               	bcf	3,6	;RP1=0, select bank0
   910  0170  00BC               	movwf	??_main+2
   911  0171  3004               	movlw	4
   912  0172  00BB               	movwf	??_main+1
   913  0173  30BA               	movlw	186
   914  0174  00BA               	movwf	??_main
   915  0175                     u1057:	
   916  0175  0BBA               	decfsz	??_main,f
   917  0176  2975               	goto	u1057
   918  0177  0BBB               	decfsz	??_main+1,f
   919  0178  2975               	goto	u1057
   920  0179  0BBC               	decfsz	??_main+2,f
   921  017A  2975               	goto	u1057
   922  017B                     l1517:	
   923                           
   924                           ;main.c: 112: 
   925  017B  1683               	bsf	3,5	;RP0=1, select bank1
   926  017C  1303               	bcf	3,6	;RP1=0, select bank1
   927  017D  0820               	movf	main@kobra^(0+128),w
   928  017E  1283               	bcf	3,5	;RP0=0, select bank0
   929  017F  1303               	bcf	3,6	;RP1=0, select bank0
   930  0180  00BA               	movwf	??_main
   931  0181  3003               	movlw	3
   932  0182                     u1035:	
   933  0182  1003               	clrc
   934  0183  0DBA               	rlf	??_main,f
   935  0184  3EFF               	addlw	-1
   936  0185  1D03               	skipz
   937  0186  2982               	goto	u1035
   938  0187  1683               	bsf	3,5	;RP0=1, select bank1
   939  0188  1303               	bcf	3,6	;RP1=0, select bank1
   940  0189  0821               	movf	(main@kobra^(0+128)+1),w
   941  018A  1283               	bcf	3,5	;RP0=0, select bank0
   942  018B  1303               	bcf	3,6	;RP1=0, select bank0
   943  018C  073A               	addwf	??_main,w
   944  018D  00BB               	movwf	??_main+1
   945  018E  083B               	movf	??_main+1,w
   946  018F  1683               	bsf	3,5	;RP0=1, select bank1
   947  0190  1303               	bcf	3,6	;RP1=0, select bank1
   948  0191  07E8               	addwf	main@semente^(0+128),f
   949  0192                     l1519:	
   950                           
   951                           ;main.c: 113: void inicializarJogo(char * mapa, Ponto * ovo, Ponto * kobra){
   952  0192  01EB               	clrf	main@i^(0+128)
   953  0193                     l1525:	
   954                           
   955                           ;main.c: 114:     mapa[0] = 0b00000000;
   956  0193  086B               	movf	main@i^(0+128),w
   957  0194  3EE0               	addlw	(low (main@mapa| 0))& (0+255)
   958  0195  0084               	movwf	4
   959  0196  1383               	bcf	3,7	;select IRP bank1
   960  0197  0180               	clrf	0
   961  0198                     l1527:	
   962  0198  3001               	movlw	1
   963  0199  1283               	bcf	3,5	;RP0=0, select bank0
   964  019A  1303               	bcf	3,6	;RP1=0, select bank0
   965  019B  00BA               	movwf	??_main
   966  019C  083A               	movf	??_main,w
   967  019D  1683               	bsf	3,5	;RP0=1, select bank1
   968  019E  1303               	bcf	3,6	;RP1=0, select bank1
   969  019F  07EB               	addwf	main@i^(0+128),f
   970  01A0                     l1529:	
   971  01A0  3008               	movlw	8
   972  01A1  026B               	subwf	main@i^(0+128),w
   973  01A2  1C03               	skipc
   974  01A3  29A5               	goto	u1041
   975  01A4  29A6               	goto	u1040
   976  01A5                     u1041:	
   977  01A5  2993               	goto	l1525
   978  01A6                     u1040:	
   979  01A6  2832               	goto	l1457
   980  01A7                     l1531:	
   981                           
   982                           ;main.c: 116:     mapa[2] = 0b00000000;
   983  01A7  30E9               	movlw	(low (main@ovo| 0))& (0+255)
   984  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   985  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   986  01AA  00BA               	movwf	??_main
   987  01AB  083A               	movf	??_main,w
   988  01AC  00F4               	movwf	inicializarJogo@ovo
   989  01AD  30A0               	movlw	(low (main@kobra| 0))& (0+255)
   990  01AE  00BB               	movwf	??_main+1
   991  01AF  083B               	movf	??_main+1,w
   992  01B0  00F5               	movwf	inicializarJogo@kobra
   993  01B1  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   994  01B2  237D               	fcall	_inicializarJogo
   995  01B3                     l1533:	
   996                           
   997                           ;main.c: 117:     mapa[3] = 0b00000000;
   998  01B3  3003               	movlw	3
   999  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1000  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1001  01B6  00BA               	movwf	??_main
  1002  01B7  083A               	movf	??_main,w
  1003  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1004  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1005  01BA  00E0               	movwf	main@mapa^(0+128)
  1006  01BB                     l1535:	
  1007                           
  1008                           ;main.c: 118:     mapa[4] = 0b00000000;
  1009  01BB  3007               	movlw	7
  1010  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1011  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1012  01BE  00BA               	movwf	??_main
  1013  01BF  083A               	movf	??_main,w
  1014  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1015  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1016  01C2  00E1               	movwf	(main@mapa^(0+128)+1)
  1017  01C3                     l1537:	
  1018                           
  1019                           ;main.c: 119:     mapa[5] = 0b00000000;
  1020  01C3  300E               	movlw	14
  1021  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1022  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1023  01C6  00BA               	movwf	??_main
  1024  01C7  083A               	movf	??_main,w
  1025  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1026  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1027  01CA  00E2               	movwf	(main@mapa^(0+128)+2)
  1028  01CB                     l1539:	
  1029                           
  1030                           ;main.c: 120:     mapa[6] = 0b00000000;
  1031  01CB  309C               	movlw	156
  1032  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1033  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1034  01CE  00BA               	movwf	??_main
  1035  01CF  083A               	movf	??_main,w
  1036  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1037  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1038  01D2  00E3               	movwf	(main@mapa^(0+128)+3)
  1039  01D3                     l1541:	
  1040                           
  1041                           ;main.c: 121:     mapa[7] = 0b00000000;
  1042  01D3  30B8               	movlw	184
  1043  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1044  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1045  01D6  00BA               	movwf	??_main
  1046  01D7  083A               	movf	??_main,w
  1047  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1048  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1049  01DA  00E4               	movwf	(main@mapa^(0+128)+4)
  1050  01DB                     l1543:	
  1051                           
  1052                           ;main.c: 122: 
  1053  01DB  30F0               	movlw	240
  1054  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1055  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1056  01DE  00BA               	movwf	??_main
  1057  01DF  083A               	movf	??_main,w
  1058  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  1059  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  1060  01E2  00E5               	movwf	(main@mapa^(0+128)+5)
  1061  01E3                     l1545:	
  1062                           
  1063                           ;main.c: 123:     ovo->i = 7;
  1064  01E3  30E0               	movlw	224
  1065  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1066  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1067  01E6  00BA               	movwf	??_main
  1068  01E7  083A               	movf	??_main,w
  1069  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1070  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1071  01EA  00E6               	movwf	(main@mapa^(0+128)+6)
  1072  01EB                     l1547:	
  1073                           
  1074                           ;main.c: 124:     ovo->j = 2;
  1075  01EB  30F8               	movlw	248
  1076  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1077  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1078  01EE  00BA               	movwf	??_main
  1079  01EF  083A               	movf	??_main,w
  1080  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1081  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1082  01F2  00E7               	movwf	(main@mapa^(0+128)+7)
  1083  01F3                     l1549:	
  1084                           
  1085                           ;main.c: 125: 
  1086  01F3  30E0               	movlw	(low (main@mapa| 0))& (0+255)
  1087  01F4  226B               	fcall	_desenharMatriz
  1088  01F5  2832               	goto	l1457
  1089  01F6  280A               	ljmp	start
  1090  01F7                     __end_of_main:	
  1091                           
  1092                           	psect	text1
  1093  03B7                     __ptext1:	
  1094 ;; *************** function _renderizar *****************
  1095 ;; Defined at:
  1096 ;;		line 150 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  mapa            1    wreg     PTR unsigned char 
  1099 ;;		 -> main@mapa(8), 
  1100 ;;  aux             2    4[COMMON] struct .
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  mapa            1    6[COMMON] PTR unsigned char 
  1103 ;;		 -> main@mapa(8), 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1113 ;;      Params:         2       0       0       0
  1114 ;;      Locals:         1       0       0       0
  1115 ;;      Temps:          0       5       0       0
  1116 ;;      Totals:         3       5       0       0
  1117 ;;Total ram usage:        8 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _renderizar
  1129  03B7                     _renderizar:	
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _renderizar: [wreg-fsr0h+status,2+status,0]
  1133                           ;renderizar@mapa stored from wreg
  1134  03B7  00F6               	movwf	renderizar@mapa
  1135  03B8                     l1115:	
  1136                           
  1137                           ;main.c: 151:     char temp[8] = {0x00};
  1138  03B8  0A75               	incf	renderizar@aux+1,w
  1139  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1140  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1141  03BB  00A0               	movwf	??_renderizar
  1142  03BC  3080               	movlw	128
  1143  03BD  00A1               	movwf	??_renderizar+1
  1144  03BE  3000               	movlw	0
  1145  03BF  00A2               	movwf	??_renderizar+2
  1146  03C0  2BC4               	goto	u484
  1147  03C1                     u485:	
  1148  03C1  0D22               	rlf	??_renderizar+2,w
  1149  03C2  0CA2               	rrf	??_renderizar+2,f
  1150  03C3  0CA1               	rrf	??_renderizar+1,f
  1151  03C4                     u484:	
  1152  03C4  0BA0               	decfsz	??_renderizar,f
  1153  03C5  2BC1               	goto	u485
  1154  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1155  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1156  03C8  0821               	movf	??_renderizar+1,w
  1157  03C9  00A3               	movwf	??_renderizar+3
  1158  03CA  0874               	movf	renderizar@aux,w
  1159  03CB  0776               	addwf	renderizar@mapa,w
  1160  03CC  00A4               	movwf	??_renderizar+4
  1161  03CD  0824               	movf	??_renderizar+4,w
  1162  03CE  0084               	movwf	4
  1163  03CF  0823               	movf	??_renderizar+3,w
  1164  03D0  1383               	bcf	3,7	;select IRP bank0
  1165  03D1  0480               	iorwf	0,f
  1166  03D2                     l91:	
  1167  03D2  0008               	return
  1168  03D3                     __end_of_renderizar:	
  1169                           
  1170                           	psect	text2
  1171  037D                     __ptext2:	
  1172 ;; *************** function _inicializarJogo *****************
  1173 ;; Defined at:
  1174 ;;		line 131 in file "main.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  mapa            1    wreg     PTR unsigned char 
  1177 ;;		 -> main@mapa(8), 
  1178 ;;  ovo             1    4[COMMON] PTR struct .
  1179 ;;		 -> main@ovo(2), 
  1180 ;;  kobra           1    5[COMMON] PTR struct .
  1181 ;;		 -> main@kobra(64), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  mapa            1    7[COMMON] PTR unsigned char 
  1184 ;;		 -> main@mapa(8), 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1194 ;;      Params:         2       0       0       0
  1195 ;;      Locals:         1       0       0       0
  1196 ;;      Temps:          1       0       0       0
  1197 ;;      Totals:         4       0       0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _inicializarJogo
  1210  037D                     _inicializarJogo:	
  1211                           
  1212                           ;incstack = 0
  1213                           ; Regs used in _inicializarJogo: [wreg-fsr0h+status,2+status,0]
  1214                           ;inicializarJogo@mapa stored from wreg
  1215  037D  00F7               	movwf	inicializarJogo@mapa
  1216  037E                     l1155:	
  1217                           
  1218                           ;main.c: 132: __attribute__((inline)) void renderizar(char * mapa, Ponto aux){
  1219  037E  0877               	movf	inicializarJogo@mapa,w
  1220  037F  0084               	movwf	4
  1221  0380  1383               	bcf	3,7	;select IRP bank0
  1222  0381  0180               	clrf	0
  1223                           
  1224                           ;main.c: 133:     mapa[aux.i] |= 0x80 >> aux.j;
  1225  0382  0A77               	incf	inicializarJogo@mapa,w
  1226  0383  0084               	movwf	4
  1227  0384  0180               	clrf	0
  1228  0385                     l1157:	
  1229                           
  1230                           ;main.c: 134: }
  1231  0385  0877               	movf	inicializarJogo@mapa,w
  1232  0386  3E02               	addlw	2
  1233  0387  0084               	movwf	4
  1234  0388  0180               	clrf	0
  1235  0389                     l1159:	
  1236                           
  1237                           ;main.c: 135: 
  1238  0389  0877               	movf	inicializarJogo@mapa,w
  1239  038A  3E03               	addlw	3
  1240  038B  0084               	movwf	4
  1241  038C  0180               	clrf	0
  1242  038D                     l1161:	
  1243                           
  1244                           ;main.c: 136: void inicializarDisplay() {
  1245  038D  0877               	movf	inicializarJogo@mapa,w
  1246  038E  3E04               	addlw	4
  1247  038F  0084               	movwf	4
  1248  0390  0180               	clrf	0
  1249  0391                     l1163:	
  1250                           
  1251                           ;main.c: 137:     char parteAlta = 0b00001100;
  1252  0391  0877               	movf	inicializarJogo@mapa,w
  1253  0392  3E05               	addlw	5
  1254  0393  0084               	movwf	4
  1255  0394  0180               	clrf	0
  1256  0395                     l1165:	
  1257                           
  1258                           ;main.c: 138:     char parteBaixa = 0b00000001;
  1259  0395  0877               	movf	inicializarJogo@mapa,w
  1260  0396  3E06               	addlw	6
  1261  0397  0084               	movwf	4
  1262  0398  0180               	clrf	0
  1263  0399                     l1167:	
  1264                           
  1265                           ;main.c: 139:     enviarParaDisplay(parteAlta, parteBaixa);
  1266  0399  0877               	movf	inicializarJogo@mapa,w
  1267  039A  3E07               	addlw	7
  1268  039B  0084               	movwf	4
  1269  039C  0180               	clrf	0
  1270  039D                     l1169:	
  1271                           
  1272                           ;main.c: 141:     parteAlta = 0b00001001;
  1273  039D  3007               	movlw	7
  1274  039E  00F6               	movwf	??_inicializarJogo
  1275  039F  0874               	movf	inicializarJogo@ovo,w
  1276  03A0  0084               	movwf	4
  1277  03A1  0876               	movf	??_inicializarJogo,w
  1278  03A2  0080               	movwf	0
  1279  03A3                     l1171:	
  1280                           
  1281                           ;main.c: 142:     parteBaixa = 0b00000000;
  1282  03A3  3002               	movlw	2
  1283  03A4  00F6               	movwf	??_inicializarJogo
  1284  03A5  0A74               	incf	inicializarJogo@ovo,w
  1285  03A6  0084               	movwf	4
  1286  03A7  0876               	movf	??_inicializarJogo,w
  1287  03A8  0080               	movwf	0
  1288                           
  1289                           ;main.c: 144: 
  1290  03A9  0875               	movf	inicializarJogo@kobra,w
  1291  03AA  0084               	movwf	4
  1292  03AB  0180               	clrf	0
  1293  03AC                     l1173:	
  1294                           
  1295                           ;main.c: 145:     parteAlta = 0b00001011;
  1296  03AC  3002               	movlw	2
  1297  03AD  00F6               	movwf	??_inicializarJogo
  1298  03AE  0A75               	incf	inicializarJogo@kobra,w
  1299  03AF  0084               	movwf	4
  1300  03B0  0876               	movf	??_inicializarJogo,w
  1301  03B1  0080               	movwf	0
  1302  03B2                     l1175:	
  1303                           
  1304                           ;main.c: 146:     parteBaixa = 0x07;
  1305  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  1306  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  1307  03B4  01EE               	clrf	_tamanho_kobra^(0+128)
  1308  03B5  0AEE               	incf	_tamanho_kobra^(0+128),f
  1309  03B6                     l88:	
  1310  03B6  0008               	return
  1311  03B7                     __end_of_inicializarJogo:	
  1312                           
  1313                           	psect	text3
  1314  03D3                     __ptext3:	
  1315 ;; *************** function _inicializarDisplay *****************
  1316 ;; Defined at:
  1317 ;;		line 154 in file "main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  parteBaixa      1    0        unsigned char 
  1322 ;;  parteAlta       1    0        unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1332 ;;      Params:         0       0       0       0
  1333 ;;      Locals:         0       2       0       0
  1334 ;;      Temps:          0       1       0       0
  1335 ;;      Totals:         0       3       0       0
  1336 ;;Total ram usage:        3 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    3
  1339 ;; This function calls:
  1340 ;;		_enviarParaDisplay
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _inicializarDisplay
  1348  03D3                     _inicializarDisplay:	
  1349  03D3                     l1379:	
  1350                           ;incstack = 0
  1351                           ; Regs used in _inicializarDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1352                           
  1353  03D3                     l1381:	
  1354  03D3                     l1383:	
  1355                           
  1356                           ;main.c: 157:         indice = indice >> 1;
  1357  03D3  01F5               	clrf	enviarParaDisplay@parteBaixa
  1358  03D4  0AF5               	incf	enviarParaDisplay@parteBaixa,f
  1359  03D5  300C               	movlw	12
  1360  03D6  21F7               	fcall	_enviarParaDisplay
  1361  03D7                     l1385:	
  1362  03D7                     l1387:	
  1363  03D7                     l1389:	
  1364                           
  1365                           ;main.c: 161:     }
  1366  03D7  01F5               	clrf	enviarParaDisplay@parteBaixa
  1367  03D8  3009               	movlw	9
  1368  03D9  21F7               	fcall	_enviarParaDisplay
  1369  03DA                     l1391:	
  1370  03DA                     l1393:	
  1371  03DA                     l1395:	
  1372                           
  1373                           ;main.c: 165:     RA0 = 0;
  1374  03DA  3007               	movlw	7
  1375  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1376  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1377  03DD  00A7               	movwf	??_inicializarDisplay
  1378  03DE  0827               	movf	??_inicializarDisplay,w
  1379  03DF  00F5               	movwf	enviarParaDisplay@parteBaixa
  1380  03E0  300B               	movlw	11
  1381  03E1  21F7               	fcall	_enviarParaDisplay
  1382  03E2                     l94:	
  1383  03E2  0008               	return
  1384  03E3                     __end_of_inicializarDisplay:	
  1385                           
  1386                           	psect	text4
  1387  026B                     __ptext4:	
  1388 ;; *************** function _desenharMatriz *****************
  1389 ;; Defined at:
  1390 ;;		line 168 in file "main.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  vetor           1    wreg     PTR unsigned char 
  1393 ;;		 -> main@mapa(8), 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  vetor           1   21[BANK0 ] PTR unsigned char 
  1396 ;;		 -> main@mapa(8), 
  1397 ;;  j               1   24[BANK0 ] unsigned char 
  1398 ;;  i               1   25[BANK0 ] unsigned char 
  1399 ;;  i               1   23[BANK0 ] unsigned char 
  1400 ;;  temp            8   13[BANK0 ] unsigned char [8]
  1401 ;;  indice          1   22[BANK0 ] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1411 ;;      Params:         0       0       0       0
  1412 ;;      Locals:         0      13       0       0
  1413 ;;      Temps:          0       6       0       0
  1414 ;;      Totals:         0      19       0       0
  1415 ;;Total ram usage:       19 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    3
  1418 ;; This function calls:
  1419 ;;		_enviarParaDisplay
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _desenharMatriz
  1427  026B                     _desenharMatriz:	
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _desenharMatriz: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1431                           ;desenharMatriz@vetor stored from wreg
  1432  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1433  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1434  026D  00B5               	movwf	desenharMatriz@vetor
  1435  026E                     l1117:	
  1436                           
  1437                           ;main.c: 169:         RA0 = 1;
  1438  026E  302D               	movlw	desenharMatriz@temp& (0+255)
  1439  026F  0084               	movwf	4
  1440  0270  3008               	movlw	8
  1441  0271  00FF               	movwf	btemp+1
  1442  0272                     u490:	
  1443  0272  1383               	bcf	3,7	;select IRP bank0
  1444  0273  0180               	clrf	0
  1445  0274  0A84               	incf	4,f
  1446  0275  0BFF               	decfsz	btemp+1,f
  1447  0276  2A72               	goto	u490
  1448  0277                     l1119:	
  1449                           
  1450                           ;main.c: 170:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1451  0277  3080               	movlw	128
  1452  0278  00A7               	movwf	??_desenharMatriz
  1453  0279  0827               	movf	??_desenharMatriz,w
  1454  027A  00B6               	movwf	desenharMatriz@indice
  1455  027B                     l1121:	
  1456                           
  1457                           ;main.c: 171:         RA0 = 0;
  1458  027B  01B7               	clrf	desenharMatriz@i
  1459  027C                     l1127:	
  1460                           
  1461                           ;main.c: 172:         parteAlta = parteAlta << 1;
  1462  027C  01B8               	clrf	desenharMatriz@j
  1463  027D                     l1133:	
  1464                           
  1465                           ;main.c: 173:     }
  1466  027D  0838               	movf	desenharMatriz@j,w
  1467  027E  3C07               	sublw	7
  1468  027F  00A7               	movwf	??_desenharMatriz
  1469  0280  0AA7               	incf	??_desenharMatriz,f
  1470  0281  0A37               	incf	desenharMatriz@i,w
  1471  0282  00A8               	movwf	??_desenharMatriz+1
  1472  0283  0838               	movf	desenharMatriz@j,w
  1473  0284  0735               	addwf	desenharMatriz@vetor,w
  1474  0285  00A9               	movwf	??_desenharMatriz+2
  1475  0286  0829               	movf	??_desenharMatriz+2,w
  1476  0287  0084               	movwf	4
  1477  0288  0800               	movf	0,w
  1478  0289  0536               	andwf	desenharMatriz@indice,w
  1479  028A  00AA               	movwf	??_desenharMatriz+3
  1480  028B  01AB               	clrf	??_desenharMatriz+4
  1481  028C  2A90               	goto	u504
  1482  028D                     u505:	
  1483  028D  1003               	clrc
  1484  028E  0DAA               	rlf	??_desenharMatriz+3,f
  1485  028F  0DAB               	rlf	??_desenharMatriz+4,f
  1486  0290                     u504:	
  1487  0290  0BA8               	decfsz	??_desenharMatriz+1,f
  1488  0291  2A8D               	goto	u505
  1489  0292  2A96               	goto	u514
  1490  0293                     u515:	
  1491  0293  0D2B               	rlf	??_desenharMatriz+4,w
  1492  0294  0CAB               	rrf	??_desenharMatriz+4,f
  1493  0295  0CAA               	rrf	??_desenharMatriz+3,f
  1494  0296                     u514:	
  1495  0296  0BA7               	decfsz	??_desenharMatriz,f
  1496  0297  2A93               	goto	u515
  1497  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1499  029A  082A               	movf	??_desenharMatriz+3,w
  1500  029B  00AC               	movwf	??_desenharMatriz+5
  1501  029C  0837               	movf	desenharMatriz@i,w
  1502  029D  3E2D               	addlw	(low (desenharMatriz@temp| 0))& (0+255)
  1503  029E  0084               	movwf	4
  1504  029F  082C               	movf	??_desenharMatriz+5,w
  1505  02A0  1383               	bcf	3,7	;select IRP bank0
  1506  02A1  0480               	iorwf	0,f
  1507  02A2                     l1135:	
  1508                           
  1509                           ;main.c: 174: 
  1510  02A2  3001               	movlw	1
  1511  02A3  00A7               	movwf	??_desenharMatriz
  1512  02A4  0827               	movf	??_desenharMatriz,w
  1513  02A5  07B8               	addwf	desenharMatriz@j,f
  1514  02A6                     l1137:	
  1515  02A6  3008               	movlw	8
  1516  02A7  0238               	subwf	desenharMatriz@j,w
  1517  02A8  1C03               	skipc
  1518  02A9  2AAB               	goto	u521
  1519  02AA  2AAC               	goto	u520
  1520  02AB                     u521:	
  1521  02AB  2A7D               	goto	l1133
  1522  02AC                     u520:	
  1523  02AC                     l1139:	
  1524                           
  1525                           ;main.c: 175:     for(int i = 0; i < 8; i++){
  1526  02AC  0836               	movf	desenharMatriz@indice,w
  1527  02AD  00A7               	movwf	??_desenharMatriz
  1528  02AE  1003               	clrc
  1529  02AF  0C27               	rrf	??_desenharMatriz,w
  1530  02B0  00A8               	movwf	??_desenharMatriz+1
  1531  02B1  0828               	movf	??_desenharMatriz+1,w
  1532  02B2  00B6               	movwf	desenharMatriz@indice
  1533                           
  1534                           ;main.c: 176:         char temp = parteBaixa & 128;
  1535  02B3  3001               	movlw	1
  1536  02B4  00A7               	movwf	??_desenharMatriz
  1537  02B5  0827               	movf	??_desenharMatriz,w
  1538  02B6  07B7               	addwf	desenharMatriz@i,f
  1539  02B7                     l1141:	
  1540  02B7  3008               	movlw	8
  1541  02B8  0237               	subwf	desenharMatriz@i,w
  1542  02B9  1C03               	skipc
  1543  02BA  2ABC               	goto	u531
  1544  02BB  2ABD               	goto	u530
  1545  02BC                     u531:	
  1546  02BC  2A7C               	goto	l1127
  1547  02BD                     u530:	
  1548  02BD                     l1143:	
  1549                           
  1550                           ;main.c: 177:         RA2 = (temp == 128 ? 1 : 0);
  1551  02BD  01B9               	clrf	desenharMatriz@i_123
  1552  02BE                     l1149:	
  1553                           
  1554                           ;main.c: 178:         RA0 = 1;
  1555  02BE  0839               	movf	desenharMatriz@i_123,w
  1556  02BF  3E2D               	addlw	(low (desenharMatriz@temp| 0))& (0+255)
  1557  02C0  0084               	movwf	4
  1558  02C1  1383               	bcf	3,7	;select IRP bank0
  1559  02C2  0800               	movf	0,w
  1560  02C3  00A7               	movwf	??_desenharMatriz
  1561  02C4  0827               	movf	??_desenharMatriz,w
  1562  02C5  00F5               	movwf	enviarParaDisplay@parteBaixa
  1563  02C6  0839               	movf	desenharMatriz@i_123,w
  1564  02C7  3E01               	addlw	1
  1565  02C8  21F7               	fcall	_enviarParaDisplay
  1566  02C9                     l1151:	
  1567                           
  1568                           ;main.c: 179:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1569  02C9  3001               	movlw	1
  1570  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1571  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1572  02CC  00A7               	movwf	??_desenharMatriz
  1573  02CD  0827               	movf	??_desenharMatriz,w
  1574  02CE  07B9               	addwf	desenharMatriz@i_123,f
  1575  02CF                     l1153:	
  1576  02CF  3008               	movlw	8
  1577  02D0  0239               	subwf	desenharMatriz@i_123,w
  1578  02D1  1C03               	skipc
  1579  02D2  2AD4               	goto	u541
  1580  02D3  2AD5               	goto	u540
  1581  02D4                     u541:	
  1582  02D4  2ABE               	goto	l1149
  1583  02D5                     u540:	
  1584  02D5                     l105:	
  1585  02D5  0008               	return
  1586  02D6                     __end_of_desenharMatriz:	
  1587                           
  1588                           	psect	text5
  1589  01F7                     __ptext5:	
  1590 ;; *************** function _enviarParaDisplay *****************
  1591 ;; Defined at:
  1592 ;;		line 182 in file "main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  parteAlta       1    wreg     unsigned char 
  1595 ;;  parteBaixa      1    5[COMMON] unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  parteAlta       1    6[BANK0 ] unsigned char 
  1598 ;;  temp            1    1[BANK0 ] unsigned char 
  1599 ;;  temp            1    0[BANK0 ] unsigned char 
  1600 ;;  i               2    4[BANK0 ] int 
  1601 ;;  i               2    2[BANK0 ] int 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1611 ;;      Params:         1       0       0       0
  1612 ;;      Locals:         0       7       0       0
  1613 ;;      Temps:          2       0       0       0
  1614 ;;      Totals:         3       7       0       0
  1615 ;;Total ram usage:       10 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    2
  1618 ;; This function calls:
  1619 ;;		_finalizarEnvio
  1620 ;; This function is called by:
  1621 ;;		_inicializarDisplay
  1622 ;;		_desenharMatriz
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function _enviarParaDisplay
  1628  01F7                     _enviarParaDisplay:	
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _enviarParaDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1632                           ;enviarParaDisplay@parteAlta stored from wreg
  1633  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1634  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1635  01F9  00A6               	movwf	enviarParaDisplay@parteAlta
  1636  01FA                     l1049:	
  1637                           
  1638                           ;main.c: 183:     finalizarEnvio();
  1639  01FA  1005               	bcf	5,0	;volatile
  1640  01FB                     l1051:	
  1641                           
  1642                           ;main.c: 184: }
  1643  01FB  01A2               	clrf	enviarParaDisplay@i
  1644  01FC  01A3               	clrf	enviarParaDisplay@i+1
  1645  01FD                     l1057:	
  1646                           
  1647                           ;main.c: 185: 
  1648  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1649  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1650  01FF  0826               	movf	enviarParaDisplay@parteAlta,w
  1651  0200  3980               	andlw	128
  1652  0201  00F6               	movwf	??_enviarParaDisplay
  1653  0202  0876               	movf	??_enviarParaDisplay,w
  1654  0203  00A0               	movwf	enviarParaDisplay@temp
  1655  0204                     l1059:	
  1656                           
  1657                           ;main.c: 186: void finalizarEnvio(){
  1658  0204  3080               	movlw	128
  1659  0205  0620               	xorwf	enviarParaDisplay@temp,w
  1660  0206  1903               	btfsc	3,2
  1661  0207  2A09               	goto	u421
  1662  0208  2A0D               	goto	u420
  1663  0209                     u421:	
  1664  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1665  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1666  020B  1505               	bsf	5,2	;volatile
  1667  020C  2A10               	goto	u434
  1668  020D                     u420:	
  1669  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1670  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1671  020F  1105               	bcf	5,2	;volatile
  1672  0210                     u434:	
  1673  0210                     l1061:	
  1674                           
  1675                           ;main.c: 187:     RA1 = 1;
  1676  0210  1405               	bsf	5,0	;volatile
  1677  0211                     l1063:	
  1678                           
  1679                           ;main.c: 188:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1680  0211  3021               	movlw	33
  1681  0212  00F6               	movwf	??_enviarParaDisplay
  1682  0213                     u1067:	
  1683  0213  0BF6               	decfsz	??_enviarParaDisplay,f
  1684  0214  2A13               	goto	u1067
  1685  0215                     l1065:	
  1686                           
  1687                           ;main.c: 189:     RA1 = 0;
  1688  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0217  1005               	bcf	5,0	;volatile
  1691  0218                     l1067:	
  1692                           
  1693                           ;main.c: 190: }
  1694  0218  0826               	movf	enviarParaDisplay@parteAlta,w
  1695  0219  00F6               	movwf	??_enviarParaDisplay
  1696  021A  0776               	addwf	??_enviarParaDisplay,w
  1697  021B  00F7               	movwf	??_enviarParaDisplay+1
  1698  021C  0877               	movf	??_enviarParaDisplay+1,w
  1699  021D  00A6               	movwf	enviarParaDisplay@parteAlta
  1700  021E                     l1069:	
  1701  021E  3001               	movlw	1
  1702  021F  07A2               	addwf	enviarParaDisplay@i,f
  1703  0220  1803               	skipnc
  1704  0221  0AA3               	incf	enviarParaDisplay@i+1,f
  1705  0222  3000               	movlw	0
  1706  0223  07A3               	addwf	enviarParaDisplay@i+1,f
  1707  0224                     l1071:	
  1708  0224  0823               	movf	enviarParaDisplay@i+1,w
  1709  0225  3A80               	xorlw	128
  1710  0226  00FF               	movwf	btemp+1
  1711  0227  3080               	movlw	128
  1712  0228  027F               	subwf	btemp+1,w
  1713  0229  1D03               	skipz
  1714  022A  2A2D               	goto	u445
  1715  022B  3008               	movlw	8
  1716  022C  0222               	subwf	enviarParaDisplay@i,w
  1717  022D                     u445:	
  1718  022D  1C03               	skipc
  1719  022E  2A30               	goto	u441
  1720  022F  2A31               	goto	u440
  1721  0230                     u441:	
  1722  0230  29FD               	goto	l1057
  1723  0231                     u440:	
  1724  0231                     l1073:	
  1725  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0233  01A4               	clrf	enviarParaDisplay@i_129
  1728  0234  01A5               	clrf	enviarParaDisplay@i_129+1
  1729  0235                     l1079:	
  1730  0235  0875               	movf	enviarParaDisplay@parteBaixa,w
  1731  0236  3980               	andlw	128
  1732  0237  00F6               	movwf	??_enviarParaDisplay
  1733  0238  0876               	movf	??_enviarParaDisplay,w
  1734  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1735  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1736  023B  00A1               	movwf	enviarParaDisplay@temp_130
  1737  023C                     l1081:	
  1738  023C  3080               	movlw	128
  1739  023D  0621               	xorwf	enviarParaDisplay@temp_130,w
  1740  023E  1903               	btfsc	3,2
  1741  023F  2A41               	goto	u451
  1742  0240  2A45               	goto	u450
  1743  0241                     u451:	
  1744  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0243  1505               	bsf	5,2	;volatile
  1747  0244  2A48               	goto	u464
  1748  0245                     u450:	
  1749  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0247  1105               	bcf	5,2	;volatile
  1752  0248                     u464:	
  1753  0248                     l1083:	
  1754  0248  1405               	bsf	5,0	;volatile
  1755  0249                     l1085:	
  1756  0249  3021               	movlw	33
  1757  024A  00F6               	movwf	??_enviarParaDisplay
  1758  024B                     u1077:	
  1759  024B  0BF6               	decfsz	??_enviarParaDisplay,f
  1760  024C  2A4B               	goto	u1077
  1761  024D                     l1087:	
  1762  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1763  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1764  024F  1005               	bcf	5,0	;volatile
  1765  0250                     l1089:	
  1766  0250  0875               	movf	enviarParaDisplay@parteBaixa,w
  1767  0251  00F6               	movwf	??_enviarParaDisplay
  1768  0252  0776               	addwf	??_enviarParaDisplay,w
  1769  0253  00F7               	movwf	??_enviarParaDisplay+1
  1770  0254  0877               	movf	??_enviarParaDisplay+1,w
  1771  0255  00F5               	movwf	enviarParaDisplay@parteBaixa
  1772  0256                     l1091:	
  1773  0256  3001               	movlw	1
  1774  0257  07A4               	addwf	enviarParaDisplay@i_129,f
  1775  0258  1803               	skipnc
  1776  0259  0AA5               	incf	enviarParaDisplay@i_129+1,f
  1777  025A  3000               	movlw	0
  1778  025B  07A5               	addwf	enviarParaDisplay@i_129+1,f
  1779  025C                     l1093:	
  1780  025C  0825               	movf	enviarParaDisplay@i_129+1,w
  1781  025D  3A80               	xorlw	128
  1782  025E  00FF               	movwf	btemp+1
  1783  025F  3080               	movlw	128
  1784  0260  027F               	subwf	btemp+1,w
  1785  0261  1D03               	skipz
  1786  0262  2A65               	goto	u475
  1787  0263  3008               	movlw	8
  1788  0264  0224               	subwf	enviarParaDisplay@i_129,w
  1789  0265                     u475:	
  1790  0265  1C03               	skipc
  1791  0266  2A68               	goto	u471
  1792  0267  2A69               	goto	u470
  1793  0268                     u471:	
  1794  0268  2A35               	goto	l1079
  1795  0269                     u470:	
  1796  0269                     l1095:	
  1797  0269  23E3               	fcall	_finalizarEnvio
  1798  026A                     l112:	
  1799  026A  0008               	return
  1800  026B                     __end_of_enviarParaDisplay:	
  1801                           
  1802                           	psect	text6
  1803  03E3                     __ptext6:	
  1804 ;; *************** function _finalizarEnvio *****************
  1805 ;; Defined at:
  1806 ;;		line 204 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1820 ;;      Params:         0       0       0       0
  1821 ;;      Locals:         0       0       0       0
  1822 ;;      Temps:          1       0       0       0
  1823 ;;      Totals:         1       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_enviarParaDisplay
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _finalizarEnvio
  1836  03E3                     _finalizarEnvio:	
  1837  03E3                     l1043:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _finalizarEnvio: [wreg]
  1840                           
  1841  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1842  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1843  03E5  1485               	bsf	5,1	;volatile
  1844  03E6                     l1045:	
  1845  03E6  3021               	movlw	33
  1846  03E7  00F4               	movwf	??_finalizarEnvio
  1847  03E8                     u1087:	
  1848  03E8  0BF4               	decfsz	??_finalizarEnvio,f
  1849  03E9  2BE8               	goto	u1087
  1850  03EA                     l1047:	
  1851  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1852  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1853  03EC  1085               	bcf	5,1	;volatile
  1854  03ED                     l115:	
  1855  03ED  0008               	return
  1856  03EE                     __end_of_finalizarEnvio:	
  1857                           
  1858                           	psect	text7
  1859  02D6                     __ptext7:	
  1860 ;; *************** function ___awdiv *****************
  1861 ;; Defined at:
  1862 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  divisor         2    4[COMMON] int 
  1865 ;;  dividend        2    6[COMMON] int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  quotient        2    3[BANK0 ] int 
  1868 ;;  sign            1    2[BANK0 ] unsigned char 
  1869 ;;  counter         1    1[BANK0 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2    4[COMMON] int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1879 ;;      Params:         4       0       0       0
  1880 ;;      Locals:         0       4       0       0
  1881 ;;      Temps:          0       1       0       0
  1882 ;;      Totals:         4       5       0       0
  1883 ;;Total ram usage:        9 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           
  1894                           ;psect for function ___awdiv
  1895  02D6                     ___awdiv:	
  1896  02D6                     l1397:	
  1897                           ;incstack = 0
  1898                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1899                           
  1900  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  1901  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  1902  02D8  01A2               	clrf	___awdiv@sign
  1903  02D9                     l1399:	
  1904  02D9  1FF5               	btfss	___awdiv@divisor+1,7
  1905  02DA  2ADC               	goto	u831
  1906  02DB  2ADD               	goto	u830
  1907  02DC                     u831:	
  1908  02DC  2AE4               	goto	l1405
  1909  02DD                     u830:	
  1910  02DD                     l1401:	
  1911  02DD  09F4               	comf	___awdiv@divisor,f
  1912  02DE  09F5               	comf	___awdiv@divisor+1,f
  1913  02DF  0AF4               	incf	___awdiv@divisor,f
  1914  02E0  1903               	skipnz
  1915  02E1  0AF5               	incf	___awdiv@divisor+1,f
  1916  02E2                     l1403:	
  1917  02E2  01A2               	clrf	___awdiv@sign
  1918  02E3  0AA2               	incf	___awdiv@sign,f
  1919  02E4                     l1405:	
  1920  02E4  1FF7               	btfss	___awdiv@dividend+1,7
  1921  02E5  2AE7               	goto	u841
  1922  02E6  2AE8               	goto	u840
  1923  02E7                     u841:	
  1924  02E7  2AF1               	goto	l1411
  1925  02E8                     u840:	
  1926  02E8                     l1407:	
  1927  02E8  09F6               	comf	___awdiv@dividend,f
  1928  02E9  09F7               	comf	___awdiv@dividend+1,f
  1929  02EA  0AF6               	incf	___awdiv@dividend,f
  1930  02EB  1903               	skipnz
  1931  02EC  0AF7               	incf	___awdiv@dividend+1,f
  1932  02ED                     l1409:	
  1933  02ED  3001               	movlw	1
  1934  02EE  00A0               	movwf	??___awdiv
  1935  02EF  0820               	movf	??___awdiv,w
  1936  02F0  06A2               	xorwf	___awdiv@sign,f
  1937  02F1                     l1411:	
  1938  02F1  01A3               	clrf	___awdiv@quotient
  1939  02F2  01A4               	clrf	___awdiv@quotient+1
  1940  02F3                     l1413:	
  1941  02F3  0874               	movf	___awdiv@divisor,w
  1942  02F4  0475               	iorwf	___awdiv@divisor+1,w
  1943  02F5  1903               	btfsc	3,2
  1944  02F6  2AF8               	goto	u851
  1945  02F7  2AF9               	goto	u850
  1946  02F8                     u851:	
  1947  02F8  2B30               	goto	l1433
  1948  02F9                     u850:	
  1949  02F9                     l1415:	
  1950  02F9  01A1               	clrf	___awdiv@counter
  1951  02FA  0AA1               	incf	___awdiv@counter,f
  1952  02FB  2B07               	goto	l1421
  1953  02FC                     l1417:	
  1954  02FC  3001               	movlw	1
  1955  02FD                     u865:	
  1956  02FD  1003               	clrc
  1957  02FE  0DF4               	rlf	___awdiv@divisor,f
  1958  02FF  0DF5               	rlf	___awdiv@divisor+1,f
  1959  0300  3EFF               	addlw	-1
  1960  0301  1D03               	skipz
  1961  0302  2AFD               	goto	u865
  1962  0303                     l1419:	
  1963  0303  3001               	movlw	1
  1964  0304  00A0               	movwf	??___awdiv
  1965  0305  0820               	movf	??___awdiv,w
  1966  0306  07A1               	addwf	___awdiv@counter,f
  1967  0307                     l1421:	
  1968  0307  1FF5               	btfss	___awdiv@divisor+1,7
  1969  0308  2B0A               	goto	u871
  1970  0309  2B0B               	goto	u870
  1971  030A                     u871:	
  1972  030A  2AFC               	goto	l1417
  1973  030B                     u870:	
  1974  030B                     l1423:	
  1975  030B  3001               	movlw	1
  1976  030C                     u885:	
  1977  030C  1003               	clrc
  1978  030D  0DA3               	rlf	___awdiv@quotient,f
  1979  030E  0DA4               	rlf	___awdiv@quotient+1,f
  1980  030F  3EFF               	addlw	-1
  1981  0310  1D03               	skipz
  1982  0311  2B0C               	goto	u885
  1983  0312  0875               	movf	___awdiv@divisor+1,w
  1984  0313  0277               	subwf	___awdiv@dividend+1,w
  1985  0314  1D03               	skipz
  1986  0315  2B18               	goto	u895
  1987  0316  0874               	movf	___awdiv@divisor,w
  1988  0317  0276               	subwf	___awdiv@dividend,w
  1989  0318                     u895:	
  1990  0318  1C03               	skipc
  1991  0319  2B1B               	goto	u891
  1992  031A  2B1C               	goto	u890
  1993  031B                     u891:	
  1994  031B  2B23               	goto	l1429
  1995  031C                     u890:	
  1996  031C                     l1425:	
  1997  031C  0874               	movf	___awdiv@divisor,w
  1998  031D  02F6               	subwf	___awdiv@dividend,f
  1999  031E  0875               	movf	___awdiv@divisor+1,w
  2000  031F  1C03               	skipc
  2001  0320  03F7               	decf	___awdiv@dividend+1,f
  2002  0321  02F7               	subwf	___awdiv@dividend+1,f
  2003  0322                     l1427:	
  2004  0322  1423               	bsf	___awdiv@quotient,0
  2005  0323                     l1429:	
  2006  0323  3001               	movlw	1
  2007  0324                     u905:	
  2008  0324  1003               	clrc
  2009  0325  0CF5               	rrf	___awdiv@divisor+1,f
  2010  0326  0CF4               	rrf	___awdiv@divisor,f
  2011  0327  3EFF               	addlw	-1
  2012  0328  1D03               	skipz
  2013  0329  2B24               	goto	u905
  2014  032A                     l1431:	
  2015  032A  3001               	movlw	1
  2016  032B  02A1               	subwf	___awdiv@counter,f
  2017  032C  1D03               	btfss	3,2
  2018  032D  2B2F               	goto	u911
  2019  032E  2B30               	goto	u910
  2020  032F                     u911:	
  2021  032F  2B0B               	goto	l1423
  2022  0330                     u910:	
  2023  0330                     l1433:	
  2024  0330  0822               	movf	___awdiv@sign,w
  2025  0331  1903               	btfsc	3,2
  2026  0332  2B34               	goto	u921
  2027  0333  2B35               	goto	u920
  2028  0334                     u921:	
  2029  0334  2B3A               	goto	l1437
  2030  0335                     u920:	
  2031  0335                     l1435:	
  2032  0335  09A3               	comf	___awdiv@quotient,f
  2033  0336  09A4               	comf	___awdiv@quotient+1,f
  2034  0337  0AA3               	incf	___awdiv@quotient,f
  2035  0338  1903               	skipnz
  2036  0339  0AA4               	incf	___awdiv@quotient+1,f
  2037  033A                     l1437:	
  2038  033A  0824               	movf	___awdiv@quotient+1,w
  2039  033B  00F5               	movwf	?___awdiv+1
  2040  033C  0823               	movf	___awdiv@quotient,w
  2041  033D  00F4               	movwf	?___awdiv
  2042  033E                     l354:	
  2043  033E  0008               	return
  2044  033F                     __end_of___awdiv:	
  2045                           
  2046                           	psect	text8
  2047  033F                     __ptext8:	
  2048 ;; *************** function _echo *****************
  2049 ;; Defined at:
  2050 ;;		line 39 in file "main.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2064 ;;      Params:         0       0       0       0
  2065 ;;      Locals:         0       0       0       0
  2066 ;;      Temps:          4       0       0       0
  2067 ;;      Totals:         4       0       0       0
  2068 ;;Total ram usage:        4 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		Interrupt level 1
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _echo
  2079  033F                     _echo:	
  2080  033F                     i1l1221:	
  2081                           
  2082                           ;main.c: 40: 
  2083  033F  138B               	bcf	11,7	;volatile
  2084                           
  2085                           ;main.c: 41:     CMCON = 0x07;
  2086  0340  1C0B               	btfss	11,0	;volatile
  2087  0341  2B43               	goto	u65_21
  2088  0342  2B44               	goto	u65_20
  2089  0343                     u65_21:	
  2090  0343  2B75               	goto	i1l49
  2091  0344                     u65_20:	
  2092  0344                     i1l1223:	
  2093                           
  2094                           ;main.c: 42:     TRISA = 0b00000000;
  2095  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0346  1E06               	btfss	6,4	;volatile
  2098  0347  2B49               	goto	u66_21
  2099  0348  2B4A               	goto	u66_20
  2100  0349                     u66_21:	
  2101  0349  2B74               	goto	i1l50
  2102  034A                     u66_20:	
  2103  034A                     i1l1225:	
  2104                           
  2105                           ;main.c: 43:     TRISB = 0b00010000;
  2106  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2107  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2108  034C  086C               	movf	_pause^(0+128),w
  2109  034D  1903               	btfsc	3,2
  2110  034E  2B50               	goto	u67_21
  2111  034F  2B51               	goto	u67_20
  2112  0350                     u67_21:	
  2113  0350  2B5B               	goto	i1l51
  2114  0351                     u67_20:	
  2115  0351                     i1l1227:	
  2116                           
  2117                           ;main.c: 44: 
  2118  0351  086C               	movf	_pause^(0+128),w
  2119  0352  1903               	btfsc	3,2
  2120  0353  2B55               	goto	u68_21
  2121  0354  2B57               	goto	u68_20
  2122  0355                     u68_21:	
  2123  0355  3001               	movlw	1
  2124  0356  2B58               	goto	u69_20
  2125  0357                     u68_20:	
  2126  0357  3000               	movlw	0
  2127  0358                     u69_20:	
  2128  0358  00F0               	movwf	??_echo
  2129  0359  0870               	movf	??_echo,w
  2130  035A  00EC               	movwf	_pause^(0+128)
  2131  035B                     i1l51:	
  2132                           
  2133                           ;main.c: 45:     GIE = 1;
  2134  035B  3001               	movlw	1
  2135  035C  00F0               	movwf	??_echo
  2136  035D  0870               	movf	??_echo,w
  2137  035E  07ED               	addwf	_dir^(0+128),f
  2138  035F  086D               	movf	_dir^(0+128),w
  2139  0360  3903               	andlw	3
  2140  0361  00F1               	movwf	??_echo+1
  2141  0362  0871               	movf	??_echo+1,w
  2142  0363  00ED               	movwf	_dir^(0+128)
  2143                           
  2144                           ;main.c: 46:     RBIF = 0;
  2145  0364  2B6E               	goto	i1l1231
  2146  0365                     i1l1229:	
  2147  0365  300D               	movlw	13
  2148  0366  00F1               	movwf	??_echo+1
  2149  0367  30FB               	movlw	251
  2150  0368  00F0               	movwf	??_echo
  2151  0369                     u109_27:	
  2152  0369  0BF0               	decfsz	??_echo,f
  2153  036A  2B69               	goto	u109_27
  2154  036B  0BF1               	decfsz	??_echo+1,f
  2155  036C  2B69               	goto	u109_27
  2156  036D  2B6E               	nop2
  2157  036E                     i1l1231:	
  2158  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2159  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0370  1A06               	btfsc	6,4	;volatile
  2161  0371  2B73               	goto	u70_21
  2162  0372  2B74               	goto	u70_20
  2163  0373                     u70_21:	
  2164  0373  2B65               	goto	i1l1229
  2165  0374                     u70_20:	
  2166  0374                     i1l50:	
  2167                           ;main.c: 47:     RBIE = 1;
  2168                           
  2169                           
  2170                           ;main.c: 48: 
  2171  0374  100B               	bcf	11,0	;volatile
  2172  0375                     i1l49:	
  2173                           ;main.c: 49:     char mapa[] = {
  2174                           
  2175                           
  2176                           ;main.c: 50:         0b00000000,
  2177  0375  178B               	bsf	11,7	;volatile
  2178  0376                     i1l55:	
  2179  0376  0873               	movf	??_echo+3,w
  2180  0377  008A               	movwf	10
  2181  0378  0E72               	swapf	(??_echo+2)^(0+4294967168),w
  2182  0379  0083               	movwf	3
  2183  037A  0EFE               	swapf	btemp,f
  2184  037B  0E7E               	swapf	btemp,w
  2185  037C  0009               	retfie
  2186  037D                     __end_of_echo:	
  2187  007E                     btemp	set	126	;btemp
  2188  007E                     wtemp0	set	126
  2189                           
  2190                           	psect	intentry
  2191  0004                     __pintentry:	
  2192                           ;incstack = 0
  2193                           ; Regs used in _echo: [wreg+status,2+status,0]
  2194                           
  2195  0004                     interrupt_function:	
  2196  007E                     saved_w	set	btemp
  2197  0004  00FE               	movwf	btemp
  2198  0005  0E03               	swapf	3,w
  2199  0006  00F2               	movwf	??_echo+2
  2200  0007  080A               	movf	10,w
  2201  0008  00F3               	movwf	??_echo+3
  2202  0009  2B3F               	ljmp	_echo


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     29      45
    BANK1            80     76      79
    BANK2            48      0       0

Pointer List with Targets:

    desenharMatriz@vetor	PTR unsigned char  size(1) Largest target is 8
		 -> main@mapa(BANK1[8]), 

    renderizar@mapa	PTR unsigned char  size(1) Largest target is 8
		 -> main@mapa(BANK1[8]), 

    inicializarJogo@kobra	PTR struct . size(1) Largest target is 64
		 -> main@kobra(BANK1[64]), 

    inicializarJogo@ovo	PTR struct . size(1) Largest target is 2
		 -> main@ovo(BANK1[2]), 

    inicializarJogo@mapa	PTR unsigned char  size(1) Largest target is 8
		 -> main@mapa(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _main->_inicializarJogo
    _inicializarDisplay->_enviarParaDisplay
    _desenharMatriz->_enviarParaDisplay
    _enviarParaDisplay->_finalizarEnvio

Critical Paths under _echo in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_desenharMatriz
    _inicializarDisplay->_enviarParaDisplay
    _desenharMatriz->_enviarParaDisplay

Critical Paths under _echo in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _echo in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _echo in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0    5123
                                             26 BANK0      3     3      0
                                              0 BANK1     76    76      0
                            ___awdiv
                     _desenharMatriz
                 _inicializarDisplay
                    _inicializarJogo
                         _renderizar
 ---------------------------------------------------------------------------------
 (1) _renderizar                                           8     6      2     285
                                              4 COMMON     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _inicializarJogo                                      4     2      2     449
                                              4 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _inicializarDisplay                                   3     3      0     736
                                              7 BANK0      3     3      0
                  _enviarParaDisplay
 ---------------------------------------------------------------------------------
 (1) _desenharMatriz                                      19    19      0     984
                                              7 BANK0     19    19      0
                  _enviarParaDisplay
 ---------------------------------------------------------------------------------
 (2) _enviarParaDisplay                                   10     9      1     532
                                              5 COMMON     3     2      1
                                              0 BANK0      7     7      0
                     _finalizarEnvio
 ---------------------------------------------------------------------------------
 (3) _finalizarEnvio                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _echo                                                 4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _desenharMatriz
     _enviarParaDisplay
       _finalizarEnvio
   _inicializarDisplay
     _enviarParaDisplay
       _finalizarEnvio
   _inicializarJogo
   _renderizar

 _echo (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4C      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      2D       3       56.2%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      86      10        0.0%
ABS                  0      0      86       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 23:52:07 2019

                __CFG_CP$OFF 0000                           l91 03D2                           l94 03E2  
                         l88 03B6                 ___awdiv@sign 0022                           fsr 0004  
           ?_inicializarJogo 0074                          l112 026A                          l105 02D5  
                        l115 03ED                          l354 033E                          _GIE 005F  
                        _RA0 0028                          _RA1 0029                          _RA2 002A  
                        _RB4 0034                          u420 020D                          u421 0209  
                        u440 0231                          u520 02AC                          u504 0290  
                        u441 0230                          u521 02AB                          u505 028D  
                        u450 0245                          u434 0210                          u530 02BD  
                        u514 0296                          u451 0241                          u531 02BC  
                        u515 0293                          u540 02D5                          u445 022D  
                        u541 02D4                          u470 0269                          u471 0268  
                        u464 0248                          u490 0272                          u475 0265  
                        u484 03C4                          u485 03C1                          u910 0330  
                        u830 02DD                          u911 032F                          u831 02DC  
                        u920 0335                          u840 02E8                          u921 0334  
                        u905 0324                          u841 02E7                          u850 02F9  
                        u930 002C                          u851 02F8                          u940 0039  
                        u941 0038                          u870 030B                          u950 003F  
                        u871 030A                          u951 003E                          u960 0045  
                        u865 02FD                          u961 0044                          u890 031C  
                        u970 008C                          u891 031B                          u971 008B  
                        u980 009B                          u885 030C                          u981 009A  
                        u990 00AB                          u895 0318                          u991 00AA  
                        _dir 00ED                          fsr0 0004                          indf 0000  
               __CFG_LVP$OFF 0000                         l1121 027B                         l1043 03E3  
                       l1051 01FB                         l1115 03B8                         l1045 03E6  
                       l1061 0210                         l1141 02B7                         l1133 027D  
                       l1117 026E                         l1047 03EA                         l1071 0224  
                       l1063 0211                         l1151 02C9                         l1143 02BD  
                       l1135 02A2                         l1127 027C                         l1119 0277  
                       l1401 02DD                         l1081 023C                         l1073 0231  
                       l1065 0215                         l1057 01FD                         l1049 01FA  
                       l1153 02CF                         l1137 02A6                         l1161 038D  
                       l1411 02F1                         l1403 02E2                         l1091 0256  
                       l1083 0248                         l1067 0218                         l1059 0204  
                       l1139 02AC                         l1171 03A3                         l1163 0391  
                       l1155 037E                         l1421 0307                         l1413 02F3  
                       l1405 02E4                         l1093 025C                         l1085 0249  
                       l1069 021E                         l1149 02BE                         l1173 03AC  
                       l1165 0395                         l1157 0385                         l1501 011D  
                       l1431 032A                         l1423 030B                         l1415 02F9  
                       l1407 02E8                         l1095 0269                         l1087 024D  
                       l1079 0235                         l1175 03B2                         l1167 0399  
                       l1159 0389                         l1503 012D                         l1511 0163  
                       l1425 031C                         l1417 02FC                         l1433 0330  
                       l1409 02ED                         l1089 0250                         l1169 039D  
                       l1513 016B                         l1505 013D                         l1441 001C  
                       l1435 0335                         l1427 0322                         l1419 0303  
                       l1515 016D                         l1531 01A7                         l1451 0027  
                       l1443 0020                         l1437 033A                         l1429 0323  
                       l1381 03D3                         l1541 01D3                         l1533 01B3  
                       l1525 0193                         l1517 017B                         l1509 014B  
                       l1461 003F                         l1453 0028                         l1445 0023  
                       l1391 03DA                         l1383 03D3                         l1543 01DB  
                       l1535 01BB                         l1527 0198                         l1519 0192  
                       l1471 0081                         l1463 0045                         l1455 0031  
                       l1447 0025                         l1393 03DA                         l1385 03D7  
                       l1545 01E3                         l1537 01C3                         l1529 01A0  
                       l1481 00AB                         l1473 008C                         l1465 005F  
                       l1457 0032                         l1449 0026                         l1395 03DA  
                       l1387 03D7                         l1379 03D3                         l1547 01EB  
                       l1539 01CB                         l1483 00AD                         l1475 009B  
                       l1467 0075                         l1459 0039                         l1397 02D6  
                       l1389 03D7                         l1549 01F3                         l1493 00D9  
                       l1485 00BC                         l1477 009D                         l1469 007E  
                       l1399 02D9                         l1495 0105                         l1487 00C4  
                       l1479 00A5                         l1497 0109                         l1489 00CA  
                       l1587 0155                         l1499 010F                         u1000 00CA  
                       u1001 00C9                         u1010 00D8                         u1011 00D7  
                       u1020 010E                         u1021 010D                         u1040 01A6  
                       u1041 01A5                         u1035 0182                         u1057 0175  
                       u1067 0213                         u1077 024B                         u1087 03E8  
                       _RBIE 005B                         _RBIF 0058                         i1l50 0374  
                       i1l51 035B                         i1l55 0376                         i1l49 0375  
                       _echo 033F                         _main 001C                  main@semente 00E8  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 000A  
                      ?_echo 0070                        ?_main 0070              __end_of___awdiv 033F  
              __CFG_WDTE$OFF 0000                        _CMCON 001F              ___awdiv@divisor 0074  
            ___awdiv@counter 0021                        u70_20 0374                        u70_21 0373  
                      u65_20 0344                        u65_21 0343                        _TRISA 0085  
                      _TRISB 0086                        u66_20 034A                        u66_21 0349  
                      u67_20 0351                        u67_21 0350                        u68_20 0357  
                      u68_21 0355                        u69_20 0358                __CFG_PWRTE$ON 0000  
                      _check 0078                        _pause 00EC              desenharMatriz@i 0037  
            desenharMatriz@j 0038                        main@i 00EB                        pclath 000A  
                      status 0003                        wtemp0 007E        enviarParaDisplay@temp 0020  
             __CFG_MCLRE$OFF 0000              __initialization 000B                 __end_of_echo 037D  
         _inicializarDisplay 03D3                 __end_of_main 01F7                       ??_echo 0070  
                     ??_main 003A          ?_inicializarDisplay 0070             ___awdiv@dividend 0076  
                     i1l1221 033F                       i1l1231 036E                       i1l1223 0344  
                     i1l1225 034A                       i1l1227 0351                       i1l1229 0365  
                     u109_27 0369         ??_inicializarDisplay 0027                    ??___awdiv 0020  
                     _inicio 0079             ___awdiv@quotient 0023             ??_finalizarEnvio 0074  
                     saved_w 007E       enviarParaDisplay@i_129 0024      __end_of__initialization 001A  
             __pcstackCOMMON 0070                 __pidataBANK1 03F6      __size_of_desenharMatriz 006B  
                 __pbssBANK0 003D                   __pmaintext 001C                   __pintentry 0004  
   __size_of_inicializarJogo 003A                      ___awdiv 02D6                      __ptext1 03B7  
                    __ptext2 037D                      __ptext3 03D3                      __ptext4 026B  
                    __ptext5 01F7                      __ptext6 03E3                      __ptext7 02D6  
                    __ptext8 033F                      clrloop0 03EF                      main@ovo 00E9  
       end_of_initialization 001A                   _renderizar 03B7         desenharMatriz@indice 0036  
enviarParaDisplay@parteBaixa 0075                renderizar@aux 0074            _enviarParaDisplay 01F7  
             _desenharMatriz 026B           ?_enviarParaDisplay 0075  __size_of_inicializarDisplay 0010  
        ??_enviarParaDisplay 0076            ??_inicializarJogo 0076    __end_of_enviarParaDisplay 026B  
        start_initialization 000B       __end_of_desenharMatriz 02D6    enviarParaDisplay@temp_130 0021  
              _tamanho_kobra 00EE                  ?_renderizar 0074                  __pdataBANK1 00EC  
                __pbssCOMMON 0078                    ___latbits 0000                __pcstackBANK0 0020  
              __pcstackBANK1 00A0              ?_desenharMatriz 0070           enviarParaDisplay@i 0022  
    __size_of_finalizarEnvio 000B                     ?___awdiv 0074          __size_of_renderizar 001C  
 __size_of_enviarParaDisplay 0074         inicializarJogo@kobra 0075            interrupt_function 0004  
        desenharMatriz@i_123 0039                    clear_ram0 03EE          desenharMatriz@vetor 0035  
 enviarParaDisplay@parteAlta 0026                    main@kobra 00A0              _inicializarJogo 037D  
           __size_of___awdiv 0069   __end_of_inicializarDisplay 03E3               _finalizarEnvio 03E3  
        inicializarJogo@mapa 0077                 ??_renderizar 0020           desenharMatriz@F514 003D  
              __size_of_echo 003E                __size_of_main 01DB           desenharMatriz@temp 002D  
                   main@F499 0045                     main@mapa 00E0      __end_of_inicializarJogo 03B7  
           ??_desenharMatriz 0027           __end_of_renderizar 03D3       __end_of_finalizarEnvio 03EE  
                   intlevel1 0000           inicializarJogo@ovo 0074              ?_finalizarEnvio 0070  
             renderizar@mapa 0076           __CFG_FOSC$INTOSCIO 0000  
