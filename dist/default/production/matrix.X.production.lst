

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 02:50:18 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F628A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  008C                     	;# 
    83  008E                     	;# 
    84  0092                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009F                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  008C                     	;# 
   120  008E                     	;# 
   121  0092                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009F                     	;# 
   129                           
   130                           	psect	idataBANK1
   131  0505                     __pidataBANK1:	
   132                           
   133                           ;initializer for _dir
   134  0505  3402               	retlw	2
   135                           
   136                           ;initializer for _tamanho_kobra
   137  0506  3403               	retlw	3
   138  000E                     _TMR1L	set	14
   139  000F                     _TMR1H	set	15
   140  001F                     _CMCON	set	31
   141  0029                     _RA1	set	41
   142  002A                     _RA2	set	42
   143  0028                     _RA0	set	40
   144  0080                     _TMR1ON	set	128
   145  005B                     _RBIE	set	91
   146  0058                     _RBIF	set	88
   147  005F                     _GIE	set	95
   148  0086                     _TRISB	set	134
   149  0085                     _TRISA	set	133
   150                           
   151                           ; #config settings
   152  0000                     
   153                           	psect	cinit
   154  07F3                     start_initialization:	
   155  07F3                     __initialization:	
   156                           
   157                           ; Initialize objects allocated to BANK1
   158  07F3  1683               	bsf	3,5	;RP0=1, select bank1
   159  07F4  1303               	bcf	3,6	;RP1=0, select bank1
   160  07F5  2505               	fcall	__pidataBANK1	;fetch initializer
   161  07F6  00EC               	movwf	__pdataBANK1& (0+127)
   162  07F7  2506               	fcall	__pidataBANK1+1	;fetch initializer
   163  07F8  00ED               	movwf	(__pdataBANK1+1)& (0+127)
   164                           
   165                           ; Clear objects allocated to BANK0
   166  07F9  1383               	bcf	3,7	;select IRP bank0
   167  07FA  3036               	movlw	low __pbssBANK0
   168  07FB  0084               	movwf	4
   169  07FC  3046               	movlw	low (__pbssBANK0+16)
   170  07FD  2507               	fcall	clear_ram0
   171  07FE                     end_of_initialization:	
   172                           ;End of C runtime variable initialization code
   173                           
   174  07FE                     __end_of__initialization:	
   175  07FE  0183               	clrf	3
   176  07FF  2E80               	ljmp	_main	;jump to C main() function
   177                           
   178                           	psect	bssBANK0
   179  0036                     __pbssBANK0:	
   180  0036                     desenharMatriz@F504:	
   181  0036                     	ds	8
   182  003E                     main@F493:	
   183  003E                     	ds	8
   184                           
   185                           	psect	dataBANK1
   186  00EC                     __pdataBANK1:	
   187  00EC                     _dir:	
   188  00EC                     	ds	1
   189  00ED                     _tamanho_kobra:	
   190  00ED                     	ds	1
   191                           
   192                           	psect	clrtext
   193  0507                     clear_ram0:	
   194                           ;	Called with FSR containing the base address, and
   195                           ;	W with the last address+1
   196                           
   197  0507  0064               	clrwdt	;clear the watchdog before getting into this loop
   198  0508                     clrloop0:	
   199  0508  0180               	clrf	0	;clear RAM location pointed to by FSR
   200  0509  0A84               	incf	4,f	;increment pointer
   201  050A  0604               	xorwf	4,w	;XOR with final address
   202  050B  1903               	btfsc	3,2	;have we reached the end yet?
   203  050C  3400               	retlw	0	;all done for this memory range, return
   204  050D  0604               	xorwf	4,w	;XOR again to restore value
   205  050E  2D08               	goto	clrloop0	;do the next byte
   206                           
   207                           	psect	cstackBANK1
   208  00A0                     __pcstackBANK1:	
   209  00A0                     main@kobra:	
   210                           
   211                           ; 64 bytes @ 0x0
   212  00A0                     	ds	64
   213  00E0                     main@mapa:	
   214                           
   215                           ; 8 bytes @ 0x40
   216  00E0                     	ds	8
   217  00E8                     main@semente:	
   218                           
   219                           ; 1 bytes @ 0x48
   220  00E8                     	ds	1
   221  00E9                     main@ovo:	
   222                           
   223                           ; 2 bytes @ 0x49
   224  00E9                     	ds	2
   225  00EB                     main@i:	
   226                           
   227                           ; 1 bytes @ 0x4B
   228  00EB                     	ds	1
   229                           
   230                           	psect	cstackCOMMON
   231  0070                     __pcstackCOMMON:	
   232  0070                     ?_inicializarDisplay:	
   233  0070                     ?_renderizar:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ?_desenharMatriz:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_finalizarEnvio:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0070                     ??_finalizarEnvio:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?___awdiv:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     renderizar@aux:	
   252                           ; 2 bytes @ 0x0
   253                           
   254  0070                     ___awdiv@divisor:	
   255                           ; 2 bytes @ 0x0
   256                           
   257                           
   258                           ; 2 bytes @ 0x0
   259  0070                     	ds	1
   260  0071                     ?_enviarParaDisplay:	
   261  0071                     enviarParaDisplay@parteBaixa:	
   262                           ; 1 bytes @ 0x1
   263                           
   264                           
   265                           ; 1 bytes @ 0x1
   266  0071                     	ds	1
   267  0072                     ??_renderizar:	
   268  0072                     ??_enviarParaDisplay:	
   269                           ; 1 bytes @ 0x2
   270                           
   271  0072                     ___awdiv@dividend:	
   272                           ; 1 bytes @ 0x2
   273                           
   274                           
   275                           ; 2 bytes @ 0x2
   276  0072                     	ds	2
   277  0074                     ??___awdiv:	
   278  0074                     enviarParaDisplay@temp:	
   279                           ; 1 bytes @ 0x4
   280                           
   281                           
   282                           ; 1 bytes @ 0x4
   283  0074                     	ds	1
   284  0075                     enviarParaDisplay@temp_109:	
   285  0075                     ___awdiv@counter:	
   286                           ; 1 bytes @ 0x5
   287                           
   288                           
   289                           ; 1 bytes @ 0x5
   290  0075                     	ds	1
   291  0076                     ___awdiv@sign:	
   292  0076                     enviarParaDisplay@i:	
   293                           ; 1 bytes @ 0x6
   294                           
   295                           
   296                           ; 2 bytes @ 0x6
   297  0076                     	ds	1
   298  0077                     renderizar@mapa:	
   299  0077                     ___awdiv@quotient:	
   300                           ; 1 bytes @ 0x7
   301                           
   302                           
   303                           ; 2 bytes @ 0x7
   304  0077                     	ds	1
   305  0078                     enviarParaDisplay@i_108:	
   306                           
   307                           ; 2 bytes @ 0x8
   308  0078                     	ds	2
   309  007A                     enviarParaDisplay@parteAlta:	
   310                           
   311                           ; 1 bytes @ 0xA
   312  007A                     	ds	1
   313  007B                     ??_inicializarDisplay:	
   314                           
   315                           ; 1 bytes @ 0xB
   316  007B                     	ds	1
   317                           
   318                           	psect	cstackBANK0
   319  0020                     __pcstackBANK0:	
   320  0020                     ??_desenharMatriz:	
   321                           
   322                           ; 1 bytes @ 0x0
   323  0020                     	ds	6
   324  0026                     desenharMatriz@temp:	
   325                           
   326                           ; 8 bytes @ 0x6
   327  0026                     	ds	8
   328  002E                     desenharMatriz@vetor:	
   329                           
   330                           ; 1 bytes @ 0xE
   331  002E                     	ds	1
   332  002F                     desenharMatriz@indice:	
   333                           
   334                           ; 1 bytes @ 0xF
   335  002F                     	ds	1
   336  0030                     desenharMatriz@i:	
   337                           
   338                           ; 1 bytes @ 0x10
   339  0030                     	ds	1
   340  0031                     desenharMatriz@j:	
   341                           
   342                           ; 1 bytes @ 0x11
   343  0031                     	ds	1
   344  0032                     desenharMatriz@i_102:	
   345                           
   346                           ; 1 bytes @ 0x12
   347  0032                     	ds	1
   348  0033                     ??_main:	
   349                           
   350                           ; 1 bytes @ 0x13
   351  0033                     	ds	3
   352                           
   353                           	psect	maintext
   354  0680                     __pmaintext:	
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 34 in file "main.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  kobra          64    0[BANK1 ] struct .[32]
   365 ;;  mapa            8   64[BANK1 ] unsigned char [8]
   366 ;;  ovo             2   73[BANK1 ] struct .
   367 ;;  i               1   75[BANK1 ] unsigned char 
   368 ;;  semente         1   72[BANK1 ] unsigned char 
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B00/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   378 ;;      Params:         0       0       0       0
   379 ;;      Locals:         0       0      76       0
   380 ;;      Temps:          0       3       0       0
   381 ;;      Totals:         0       3      76       0
   382 ;;Total ram usage:       79 bytes
   383 ;; Hardware stack levels required when called:    3
   384 ;; This function calls:
   385 ;;		___awdiv
   386 ;;		_desenharMatriz
   387 ;;		_inicializarDisplay
   388 ;;		_renderizar
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _main
   396  0680                     _main:	
   397  0680                     l1117:	
   398                           ;incstack = 0
   399                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   400                           
   401                           
   402                           ;main.c: 35: ;main.c: 36:     char mapa[] = {;main.c: 37:         0b00000000,;main.c: 38
      +                          :         0b00000000,;main.c: 40:         0b00000000,
   403  0680  3007               	movlw	7
   404  0681  1283               	bcf	3,5	;RP0=0, select bank0
   405  0682  1303               	bcf	3,6	;RP1=0, select bank0
   406  0683  00B3               	movwf	??_main
   407  0684  0833               	movf	??_main,w
   408  0685  1683               	bsf	3,5	;RP0=1, select bank1
   409  0686  1303               	bcf	3,6	;RP1=0, select bank1
   410  0687  00E9               	movwf	main@ovo^(0+128)
   411                           
   412                           ;main.c: 41:         0b00000000,
   413  0688  3002               	movlw	2
   414  0689  1283               	bcf	3,5	;RP0=0, select bank0
   415  068A  1303               	bcf	3,6	;RP1=0, select bank0
   416  068B  00B3               	movwf	??_main
   417  068C  0833               	movf	??_main,w
   418  068D  1683               	bsf	3,5	;RP0=1, select bank1
   419  068E  1303               	bcf	3,6	;RP1=0, select bank1
   420  068F  00EA               	movwf	(main@ovo^(0+128)+1)
   421  0690                     l1119:	
   422                           
   423                           ;main.c: 43:         0b00000000,
   424  0690  01A0               	clrf	main@kobra^(0+128)
   425  0691                     l1121:	
   426                           
   427                           ;main.c: 44:         0b00000000
   428  0691  3002               	movlw	2
   429  0692  1283               	bcf	3,5	;RP0=0, select bank0
   430  0693  1303               	bcf	3,6	;RP1=0, select bank0
   431  0694  00B3               	movwf	??_main
   432  0695  0833               	movf	??_main,w
   433  0696  1683               	bsf	3,5	;RP0=1, select bank1
   434  0697  1303               	bcf	3,6	;RP1=0, select bank1
   435  0698  00A1               	movwf	(main@kobra^(0+128)+1)
   436  0699                     l1123:	
   437                           
   438                           ;main.c: 46: 
   439  0699  3007               	movlw	7
   440  069A  1283               	bcf	3,5	;RP0=0, select bank0
   441  069B  1303               	bcf	3,6	;RP1=0, select bank0
   442  069C  009F               	movwf	31	;volatile
   443  069D                     l1125:	
   444                           
   445                           ;main.c: 47:     inicializarDisplay();
   446  069D  1683               	bsf	3,5	;RP0=1, select bank1
   447  069E  1303               	bcf	3,6	;RP1=0, select bank1
   448  069F  0185               	clrf	5	;volatile
   449                           
   450                           ;main.c: 48: 
   451  06A0  3010               	movlw	16
   452  06A1  0086               	movwf	6	;volatile
   453  06A2                     l1127:	
   454                           
   455                           ;main.c: 50:         TMR1ON = 0;
   456  06A2  178B               	bsf	11,7	;volatile
   457  06A3                     l1129:	
   458                           
   459                           ;main.c: 51:         TMR1H = 0;
   460  06A3  100B               	bcf	11,0	;volatile
   461  06A4                     l1131:	
   462                           
   463                           ;main.c: 52:         TMR1L = 0;
   464  06A4  158B               	bsf	11,3	;volatile
   465  06A5                     l1133:	
   466                           
   467                           ;main.c: 54: 
   468  06A5  30E0               	movlw	main@mapa& (0+255)
   469  06A6  0084               	movwf	4
   470  06A7  3008               	movlw	8
   471  06A8  00FF               	movwf	btemp+1
   472  06A9                     u550:	
   473  06A9  1383               	bcf	3,7	;select IRP bank1
   474  06AA  0180               	clrf	0
   475  06AB  0A84               	incf	4,f
   476  06AC  0BFF               	decfsz	btemp+1,f
   477  06AD  2EA9               	goto	u550
   478  06AE                     l1135:	
   479                           
   480                           ;main.c: 65: 
   481  06AE  251A               	fcall	_inicializarDisplay
   482  06AF                     l1137:	
   483                           
   484                           ;main.c: 68:         }
   485  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   486  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   487  06B1  1010               	bcf	16,0	;volatile
   488  06B2                     l1139:	
   489                           
   490                           ;main.c: 69: 
   491  06B2  018F               	clrf	15	;volatile
   492  06B3                     l1141:	
   493                           
   494                           ;main.c: 70:         for(i = tamanho_kobra - 1; i > 0; --i) {
   495  06B3  018E               	clrf	14	;volatile
   496  06B4                     l1143:	
   497                           
   498                           ;main.c: 74: 
   499  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   500  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   501  06B6  0820               	movf	main@kobra^(0+128),w
   502  06B7  0669               	xorwf	main@ovo^(0+128),w
   503  06B8  1D03               	skipz
   504  06B9  2EBB               	goto	u561
   505  06BA  2EBC               	goto	u560
   506  06BB                     u561:	
   507  06BB  2EFB               	goto	l1153
   508  06BC                     u560:	
   509  06BC                     l1145:	
   510  06BC  0821               	movf	(main@kobra^(0+128)+1),w
   511  06BD  066A               	xorwf	(main@ovo^(0+128)+1),w
   512  06BE  1D03               	skipz
   513  06BF  2EC1               	goto	u571
   514  06C0  2EC2               	goto	u570
   515  06C1                     u571:	
   516  06C1  2EFB               	goto	l1153
   517  06C2                     u570:	
   518  06C2                     l1147:	
   519                           
   520                           ;main.c: 75:         switch(dir) {
   521  06C2  3001               	movlw	1
   522  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   523  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   524  06C5  00B3               	movwf	??_main
   525  06C6  0833               	movf	??_main,w
   526  06C7  1683               	bsf	3,5	;RP0=1, select bank1
   527  06C8  1303               	bcf	3,6	;RP1=0, select bank1
   528  06C9  07ED               	addwf	_tamanho_kobra^(0+128),f
   529                           
   530                           ;main.c: 76:             case 0x00: kobra[0].i = (--kobra[0].i)%8; break;
   531  06CA  0921               	comf	(main@kobra^(0+128)+1),w
   532  06CB  0468               	iorwf	main@semente^(0+128),w
   533  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   534  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   535  06CE  00B3               	movwf	??_main
   536  06CF  1683               	bsf	3,5	;RP0=1, select bank1
   537  06D0  1303               	bcf	3,6	;RP1=0, select bank1
   538  06D1  0820               	movf	main@kobra^(0+128),w
   539  06D2  0468               	iorwf	main@semente^(0+128),w
   540  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   541  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   542  06D5  0533               	andwf	??_main,w
   543  06D6  393F               	andlw	63
   544  06D7  00B4               	movwf	??_main+1
   545  06D8  0834               	movf	??_main+1,w
   546  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   547  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   548  06DB  00E8               	movwf	main@semente^(0+128)
   549  06DC                     l1149:	
   550                           
   551                           ;main.c: 77:             case 0x01: kobra[0].j = (++kobra[0].j)%8; break;
   552  06DC  3008               	movlw	8
   553  06DD  00F0               	movwf	___awdiv@divisor
   554  06DE  3000               	movlw	0
   555  06DF  00F1               	movwf	___awdiv@divisor+1
   556  06E0  0868               	movf	main@semente^(0+128),w
   557  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   558  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   559  06E3  00B3               	movwf	??_main
   560  06E4  01B4               	clrf	??_main+1
   561  06E5  0833               	movf	??_main,w
   562  06E6  00F2               	movwf	___awdiv@dividend
   563  06E7  0834               	movf	??_main+1,w
   564  06E8  00F3               	movwf	___awdiv@dividend+1
   565  06E9  2540               	fcall	___awdiv
   566  06EA  0870               	movf	?___awdiv,w
   567  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   568  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   569  06ED  00B5               	movwf	??_main+2
   570  06EE  0835               	movf	??_main+2,w
   571  06EF  1683               	bsf	3,5	;RP0=1, select bank1
   572  06F0  1303               	bcf	3,6	;RP1=0, select bank1
   573  06F1  00E9               	movwf	main@ovo^(0+128)
   574  06F2                     l1151:	
   575                           
   576                           ;main.c: 78:             case 0x02: kobra[0].i = (++kobra[0].i)%8; break;
   577  06F2  0868               	movf	main@semente^(0+128),w
   578  06F3  3907               	andlw	7
   579  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   580  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   581  06F6  00B3               	movwf	??_main
   582  06F7  0833               	movf	??_main,w
   583  06F8  1683               	bsf	3,5	;RP0=1, select bank1
   584  06F9  1303               	bcf	3,6	;RP1=0, select bank1
   585  06FA  00EA               	movwf	(main@ovo^(0+128)+1)
   586  06FB                     l1153:	
   587                           
   588                           ;main.c: 82:         desenharMatriz(mapa);
   589  06FB  086A               	movf	(main@ovo+1)^(0+128),w
   590  06FC  00F1               	movwf	renderizar@aux+1
   591  06FD  0869               	movf	main@ovo^(0+128),w
   592  06FE  00F0               	movwf	renderizar@aux
   593  06FF  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   594  0700  2528               	fcall	_renderizar
   595  0701                     l1155:	
   596                           
   597                           ;main.c: 84: 
   598  0701  1683               	bsf	3,5	;RP0=1, select bank1
   599  0702  1303               	bcf	3,6	;RP1=0, select bank1
   600  0703  01EB               	clrf	main@i^(0+128)
   601  0704  2F1C               	goto	l1161
   602  0705                     l1157:	
   603                           
   604                           ;main.c: 85:         semente += kobra[0].i * 8 + kobra[0].j;
   605  0705  086B               	movf	main@i^(0+128),w
   606  0706  1283               	bcf	3,5	;RP0=0, select bank0
   607  0707  1303               	bcf	3,6	;RP1=0, select bank0
   608  0708  00B3               	movwf	??_main
   609  0709  0733               	addwf	??_main,w
   610  070A  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   611  070B  0084               	movwf	4
   612  070C  1383               	bcf	3,7	;select IRP bank1
   613  070D  0800               	movf	0,w
   614  070E  00F0               	movwf	renderizar@aux
   615  070F  0A84               	incf	4,f
   616  0710  0800               	movf	0,w
   617  0711  00F1               	movwf	renderizar@aux+1
   618  0712  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   619  0713  2528               	fcall	_renderizar
   620  0714                     l1159:	
   621                           
   622                           ;main.c: 86:         for(i = 0; i < 8; i++)
   623  0714  3001               	movlw	1
   624  0715  1283               	bcf	3,5	;RP0=0, select bank0
   625  0716  1303               	bcf	3,6	;RP1=0, select bank0
   626  0717  00B3               	movwf	??_main
   627  0718  0833               	movf	??_main,w
   628  0719  1683               	bsf	3,5	;RP0=1, select bank1
   629  071A  1303               	bcf	3,6	;RP1=0, select bank1
   630  071B  07EB               	addwf	main@i^(0+128),f
   631  071C                     l1161:	
   632  071C  086D               	movf	_tamanho_kobra^(0+128),w
   633  071D  026B               	subwf	main@i^(0+128),w
   634  071E  1C03               	skipc
   635  071F  2F21               	goto	u581
   636  0720  2F22               	goto	u580
   637  0721                     u581:	
   638  0721  2F05               	goto	l1157
   639  0722                     u580:	
   640  0722                     l1163:	
   641                           
   642                           ;main.c: 88:     }
   643  0722  086D               	movf	_tamanho_kobra^(0+128),w
   644  0723  3EFF               	addlw	255
   645  0724  1283               	bcf	3,5	;RP0=0, select bank0
   646  0725  1303               	bcf	3,6	;RP1=0, select bank0
   647  0726  00B3               	movwf	??_main
   648  0727  0833               	movf	??_main,w
   649  0728  1683               	bsf	3,5	;RP0=1, select bank1
   650  0729  1303               	bcf	3,6	;RP1=0, select bank1
   651  072A  00EB               	movwf	main@i^(0+128)
   652  072B  086B               	movf	main@i^(0+128),w
   653  072C  1D03               	btfss	3,2
   654  072D  2F2F               	goto	u591
   655  072E  2F30               	goto	u590
   656  072F                     u591:	
   657  072F  2F31               	goto	l1167
   658  0730                     u590:	
   659  0730  2FA3               	goto	l1183
   660  0731                     l1167:	
   661                           
   662                           ;main.c: 89:     return;
   663  0731  086B               	movf	main@i^(0+128),w
   664  0732  1283               	bcf	3,5	;RP0=0, select bank0
   665  0733  1303               	bcf	3,6	;RP1=0, select bank0
   666  0734  00B3               	movwf	??_main
   667  0735  0733               	addwf	??_main,w
   668  0736  3EFE               	addlw	254
   669  0737  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   670  0738  0084               	movwf	4
   671  0739  1383               	bcf	3,7	;select IRP bank1
   672  073A  0800               	movf	0,w
   673  073B  00B4               	movwf	??_main+1
   674  073C  1683               	bsf	3,5	;RP0=1, select bank1
   675  073D  1303               	bcf	3,6	;RP1=0, select bank1
   676  073E  086B               	movf	main@i^(0+128),w
   677  073F  1283               	bcf	3,5	;RP0=0, select bank0
   678  0740  1303               	bcf	3,6	;RP1=0, select bank0
   679  0741  00B5               	movwf	??_main+2
   680  0742  0735               	addwf	??_main+2,w
   681  0743  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   682  0744  0084               	movwf	4
   683  0745  0834               	movf	??_main+1,w
   684  0746  0080               	movwf	0
   685                           
   686                           ;main.c: 90: }
   687  0747  1683               	bsf	3,5	;RP0=1, select bank1
   688  0748  1303               	bcf	3,6	;RP1=0, select bank1
   689  0749  086B               	movf	main@i^(0+128),w
   690  074A  1283               	bcf	3,5	;RP0=0, select bank0
   691  074B  1303               	bcf	3,6	;RP1=0, select bank0
   692  074C  00B3               	movwf	??_main
   693  074D  0733               	addwf	??_main,w
   694  074E  3EFF               	addlw	255
   695  074F  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   696  0750  0084               	movwf	4
   697  0751  0800               	movf	0,w
   698  0752  00B4               	movwf	??_main+1
   699  0753  1403               	setc
   700  0754  1683               	bsf	3,5	;RP0=1, select bank1
   701  0755  1303               	bcf	3,6	;RP1=0, select bank1
   702  0756  0D6B               	rlf	main@i^(0+128),w
   703  0757  3EA0               	addlw	(low (main@kobra| 0))& (0+255)
   704  0758  0084               	movwf	4
   705  0759  1283               	bcf	3,5	;RP0=0, select bank0
   706  075A  1303               	bcf	3,6	;RP1=0, select bank0
   707  075B  0834               	movf	??_main+1,w
   708  075C  0080               	movwf	0
   709  075D                     l1169:	
   710                           
   711                           ;main.c: 91: 
   712  075D  3001               	movlw	1
   713  075E  1683               	bsf	3,5	;RP0=1, select bank1
   714  075F  1303               	bcf	3,6	;RP1=0, select bank1
   715  0760  02EB               	subwf	main@i^(0+128),f
   716  0761                     l1171:	
   717  0761  086B               	movf	main@i^(0+128),w
   718  0762  1D03               	btfss	3,2
   719  0763  2F65               	goto	u601
   720  0764  2F66               	goto	u600
   721  0765                     u601:	
   722  0765  2F31               	goto	l1167
   723  0766                     u600:	
   724  0766  2FA3               	goto	l1183
   725  0767                     l1173:	
   726  0767  3001               	movlw	1
   727  0768  02A0               	subwf	main@kobra^(0+128),f
   728  0769  0820               	movf	main@kobra^(0+128),w
   729  076A  3907               	andlw	7
   730  076B  1283               	bcf	3,5	;RP0=0, select bank0
   731  076C  1303               	bcf	3,6	;RP1=0, select bank0
   732  076D  00B3               	movwf	??_main
   733  076E  0833               	movf	??_main,w
   734  076F  1683               	bsf	3,5	;RP0=1, select bank1
   735  0770  1303               	bcf	3,6	;RP1=0, select bank1
   736  0771  00A0               	movwf	main@kobra^(0+128)
   737  0772  2FB6               	goto	l1185
   738  0773                     l1175:	
   739  0773  3001               	movlw	1
   740  0774  1283               	bcf	3,5	;RP0=0, select bank0
   741  0775  1303               	bcf	3,6	;RP1=0, select bank0
   742  0776  00B3               	movwf	??_main
   743  0777  0833               	movf	??_main,w
   744  0778  1683               	bsf	3,5	;RP0=1, select bank1
   745  0779  1303               	bcf	3,6	;RP1=0, select bank1
   746  077A  07A1               	addwf	(main@kobra^(0+128)+1),f
   747  077B  0821               	movf	(main@kobra^(0+128)+1),w
   748  077C  3907               	andlw	7
   749  077D  1283               	bcf	3,5	;RP0=0, select bank0
   750  077E  1303               	bcf	3,6	;RP1=0, select bank0
   751  077F  00B4               	movwf	??_main+1
   752  0780  0834               	movf	??_main+1,w
   753  0781  1683               	bsf	3,5	;RP0=1, select bank1
   754  0782  1303               	bcf	3,6	;RP1=0, select bank1
   755  0783  00A1               	movwf	(main@kobra^(0+128)+1)
   756  0784  2FB6               	goto	l1185
   757  0785                     l1177:	
   758  0785  3001               	movlw	1
   759  0786  1283               	bcf	3,5	;RP0=0, select bank0
   760  0787  1303               	bcf	3,6	;RP1=0, select bank0
   761  0788  00B3               	movwf	??_main
   762  0789  0833               	movf	??_main,w
   763  078A  1683               	bsf	3,5	;RP0=1, select bank1
   764  078B  1303               	bcf	3,6	;RP1=0, select bank1
   765  078C  07A0               	addwf	main@kobra^(0+128),f
   766  078D  0820               	movf	main@kobra^(0+128),w
   767  078E  3907               	andlw	7
   768  078F  1283               	bcf	3,5	;RP0=0, select bank0
   769  0790  1303               	bcf	3,6	;RP1=0, select bank0
   770  0791  00B4               	movwf	??_main+1
   771  0792  0834               	movf	??_main+1,w
   772  0793  1683               	bsf	3,5	;RP0=1, select bank1
   773  0794  1303               	bcf	3,6	;RP1=0, select bank1
   774  0795  00A0               	movwf	main@kobra^(0+128)
   775  0796  2FB6               	goto	l1185
   776  0797                     l1179:	
   777  0797  3001               	movlw	1
   778  0798  02A1               	subwf	(main@kobra^(0+128)+1),f
   779  0799  0821               	movf	(main@kobra^(0+128)+1),w
   780  079A  3907               	andlw	7
   781  079B  1283               	bcf	3,5	;RP0=0, select bank0
   782  079C  1303               	bcf	3,6	;RP1=0, select bank0
   783  079D  00B3               	movwf	??_main
   784  079E  0833               	movf	??_main,w
   785  079F  1683               	bsf	3,5	;RP0=1, select bank1
   786  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   787  07A1  00A1               	movwf	(main@kobra^(0+128)+1)
   788  07A2  2FB6               	goto	l1185
   789  07A3                     l1183:	
   790                           
   791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   792                           ; Switch size 1, requested type "simple"
   793                           ; Number of cases is 1, Range of values is 0 to 0
   794                           ; switch strategies available:
   795                           ; Name         Instructions Cycles
   796                           ; simple_byte            4     3 (average)
   797                           ; direct_byte            7     6 (fixed)
   798                           ; jumptable            260     6 (fixed)
   799                           ;	Chosen strategy is simple_byte
   800  07A3  3000               	movlw	0
   801  07A4  3A00               	xorlw	0	; case 0
   802  07A5  1903               	skipnz
   803  07A6  2FA8               	goto	l1239
   804  07A7  2FB6               	goto	l1185
   805  07A8                     l1239:	
   806                           
   807                           ; Switch size 1, requested type "simple"
   808                           ; Number of cases is 4, Range of values is 0 to 3
   809                           ; switch strategies available:
   810                           ; Name         Instructions Cycles
   811                           ; direct_byte           10     6 (fixed)
   812                           ; simple_byte           13     7 (average)
   813                           ; jumptable            260     6 (fixed)
   814                           ;	Chosen strategy is simple_byte
   815  07A8  3002               	movlw	2
   816  07A9  3A00               	xorlw	0	; case 0
   817  07AA  1903               	skipnz
   818  07AB  2F67               	goto	l1173
   819  07AC  3A01               	xorlw	1	; case 1
   820  07AD  1903               	skipnz
   821  07AE  2F73               	goto	l1175
   822  07AF  3A03               	xorlw	3	; case 2
   823  07B0  1903               	skipnz
   824  07B1  2F85               	goto	l1177
   825  07B2  3A01               	xorlw	1	; case 3
   826  07B3  1903               	skipnz
   827  07B4  2F97               	goto	l1179
   828  07B5  2FB6               	goto	l1185
   829  07B6                     l1185:	
   830                           
   831                           ;main.c: 100: }
   832  07B6  30E0               	movlw	(low (main@mapa| 0))& (0+255)
   833  07B7  25A7               	fcall	_desenharMatriz
   834  07B8                     l1187:	
   835                           
   836                           ;main.c: 101: 
   837  07B8  3002               	movlw	2
   838  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   839  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   840  07BB  00B5               	movwf	??_main+2
   841  07BC  3004               	movlw	4
   842  07BD  00B4               	movwf	??_main+1
   843  07BE  30BA               	movlw	186
   844  07BF  00B3               	movwf	??_main
   845  07C0                     u637:	
   846  07C0  0BB3               	decfsz	??_main,f
   847  07C1  2FC0               	goto	u637
   848  07C2  0BB4               	decfsz	??_main+1,f
   849  07C3  2FC0               	goto	u637
   850  07C4  0BB5               	decfsz	??_main+2,f
   851  07C5  2FC0               	goto	u637
   852  07C6                     l1189:	
   853                           
   854                           ;main.c: 103:     char parteAlta = 0b00001100;
   855  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   856  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   857  07C8  0820               	movf	main@kobra^(0+128),w
   858  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   859  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   860  07CB  00B3               	movwf	??_main
   861  07CC  3003               	movlw	3
   862  07CD                     u615:	
   863  07CD  1003               	clrc
   864  07CE  0DB3               	rlf	??_main,f
   865  07CF  3EFF               	addlw	-1
   866  07D0  1D03               	skipz
   867  07D1  2FCD               	goto	u615
   868  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   869  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   870  07D4  0821               	movf	(main@kobra^(0+128)+1),w
   871  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   872  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   873  07D7  0733               	addwf	??_main,w
   874  07D8  00B4               	movwf	??_main+1
   875  07D9  0834               	movf	??_main+1,w
   876  07DA  1683               	bsf	3,5	;RP0=1, select bank1
   877  07DB  1303               	bcf	3,6	;RP1=0, select bank1
   878  07DC  07E8               	addwf	main@semente^(0+128),f
   879  07DD                     l1191:	
   880                           
   881                           ;main.c: 104:     char parteBaixa = 0b00000001;
   882  07DD  01EB               	clrf	main@i^(0+128)
   883  07DE                     l1197:	
   884                           
   885                           ;main.c: 105:     enviarParaDisplay(parteAlta, parteBaixa);
   886  07DE  086B               	movf	main@i^(0+128),w
   887  07DF  3EE0               	addlw	(low (main@mapa| 0))& (0+255)
   888  07E0  0084               	movwf	4
   889  07E1  1383               	bcf	3,7	;select IRP bank1
   890  07E2  0180               	clrf	0
   891  07E3                     l1199:	
   892  07E3  3001               	movlw	1
   893  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   894  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   895  07E6  00B3               	movwf	??_main
   896  07E7  0833               	movf	??_main,w
   897  07E8  1683               	bsf	3,5	;RP0=1, select bank1
   898  07E9  1303               	bcf	3,6	;RP1=0, select bank1
   899  07EA  07EB               	addwf	main@i^(0+128),f
   900  07EB                     l1201:	
   901  07EB  3008               	movlw	8
   902  07EC  026B               	subwf	main@i^(0+128),w
   903  07ED  1C03               	skipc
   904  07EE  2FF0               	goto	u621
   905  07EF  2FF1               	goto	u620
   906  07F0                     u621:	
   907  07F0  2FDE               	goto	l1197
   908  07F1                     u620:	
   909  07F1  2EAF               	goto	l1137
   910  07F2  2800               	ljmp	start
   911  07F3                     __end_of_main:	
   912                           
   913                           	psect	text1
   914  0528                     __ptext1:	
   915 ;; *************** function _renderizar *****************
   916 ;; Defined at:
   917 ;;		line 116 in file "main.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  mapa            1    wreg     PTR unsigned char 
   920 ;;		 -> main@mapa(8), 
   921 ;;  aux             2    0[COMMON] struct .
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  mapa            1    7[COMMON] PTR unsigned char 
   924 ;;		 -> main@mapa(8), 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   934 ;;      Params:         2       0       0       0
   935 ;;      Locals:         1       0       0       0
   936 ;;      Temps:          5       0       0       0
   937 ;;      Totals:         8       0       0       0
   938 ;;Total ram usage:        8 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _renderizar
   949  0528                     _renderizar:	
   950                           
   951                           ;incstack = 0
   952                           ; Regs used in _renderizar: [wreg-fsr0h+status,2+status,0]
   953                           ;renderizar@mapa stored from wreg
   954  0528  00F7               	movwf	renderizar@mapa
   955  0529                     l1033:	
   956                           
   957                           ;main.c: 117:     char temp[8] = {0x00};
   958  0529  0A71               	incf	renderizar@aux+1,w
   959  052A  00F2               	movwf	??_renderizar
   960  052B  3080               	movlw	128
   961  052C  00F3               	movwf	??_renderizar+1
   962  052D  3000               	movlw	0
   963  052E  00F4               	movwf	??_renderizar+2
   964  052F  2D33               	goto	u384
   965  0530                     u385:	
   966  0530  0D74               	rlf	??_renderizar+2,w
   967  0531  0CF4               	rrf	??_renderizar+2,f
   968  0532  0CF3               	rrf	??_renderizar+1,f
   969  0533                     u384:	
   970  0533  0BF2               	decfsz	??_renderizar,f
   971  0534  2D30               	goto	u385
   972  0535  0873               	movf	??_renderizar+1,w
   973  0536  00F5               	movwf	??_renderizar+3
   974  0537  0870               	movf	renderizar@aux,w
   975  0538  0777               	addwf	renderizar@mapa,w
   976  0539  00F6               	movwf	??_renderizar+4
   977  053A  0876               	movf	??_renderizar+4,w
   978  053B  0084               	movwf	4
   979  053C  0875               	movf	??_renderizar+3,w
   980  053D  1383               	bcf	3,7	;select IRP bank0
   981  053E  0480               	iorwf	0,f
   982  053F                     l67:	
   983  053F  0008               	return
   984  0540                     __end_of_renderizar:	
   985                           
   986                           	psect	text2
   987  051A                     __ptext2:	
   988 ;; *************** function _inicializarDisplay *****************
   989 ;; Defined at:
   990 ;;		line 120 in file "main.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;		None
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  parteBaixa      1    0        unsigned char 
   995 ;;  parteAlta       1    0        unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1005 ;;      Params:         0       0       0       0
  1006 ;;      Locals:         2       0       0       0
  1007 ;;      Temps:          1       0       0       0
  1008 ;;      Totals:         3       0       0       0
  1009 ;;Total ram usage:        3 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    2
  1012 ;; This function calls:
  1013 ;;		_enviarParaDisplay
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _inicializarDisplay
  1021  051A                     _inicializarDisplay:	
  1022  051A                     l1015:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _inicializarDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1025                           
  1026  051A                     l1017:	
  1027  051A                     l1019:	
  1028                           
  1029                           ;main.c: 123:         indice = indice >> 1;
  1030  051A  01F1               	clrf	enviarParaDisplay@parteBaixa
  1031  051B  0AF1               	incf	enviarParaDisplay@parteBaixa,f
  1032  051C  300C               	movlw	12
  1033  051D  2612               	fcall	_enviarParaDisplay
  1034  051E                     l1021:	
  1035  051E                     l1023:	
  1036  051E                     l1025:	
  1037                           
  1038                           ;main.c: 127:     }
  1039  051E  01F1               	clrf	enviarParaDisplay@parteBaixa
  1040  051F  3009               	movlw	9
  1041  0520  2612               	fcall	_enviarParaDisplay
  1042  0521                     l1027:	
  1043  0521                     l1029:	
  1044  0521                     l1031:	
  1045                           
  1046                           ;main.c: 131:     RA0 = 0;
  1047  0521  3007               	movlw	7
  1048  0522  00FB               	movwf	??_inicializarDisplay
  1049  0523  087B               	movf	??_inicializarDisplay,w
  1050  0524  00F1               	movwf	enviarParaDisplay@parteBaixa
  1051  0525  300B               	movlw	11
  1052  0526  2612               	fcall	_enviarParaDisplay
  1053  0527                     l70:	
  1054  0527  0008               	return
  1055  0528                     __end_of_inicializarDisplay:	
  1056                           
  1057                           	psect	text3
  1058  05A7                     __ptext3:	
  1059 ;; *************** function _desenharMatriz *****************
  1060 ;; Defined at:
  1061 ;;		line 134 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  vetor           1    wreg     PTR unsigned char 
  1064 ;;		 -> main@mapa(8), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  vetor           1   14[BANK0 ] PTR unsigned char 
  1067 ;;		 -> main@mapa(8), 
  1068 ;;  j               1   17[BANK0 ] unsigned char 
  1069 ;;  i               1   18[BANK0 ] unsigned char 
  1070 ;;  i               1   16[BANK0 ] unsigned char 
  1071 ;;  temp            8    6[BANK0 ] unsigned char [8]
  1072 ;;  indice          1   15[BANK0 ] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1082 ;;      Params:         0       0       0       0
  1083 ;;      Locals:         0      13       0       0
  1084 ;;      Temps:          0       6       0       0
  1085 ;;      Totals:         0      19       0       0
  1086 ;;Total ram usage:       19 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    2
  1089 ;; This function calls:
  1090 ;;		_enviarParaDisplay
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _desenharMatriz
  1098  05A7                     _desenharMatriz:	
  1099                           
  1100                           ;incstack = 0
  1101                           ; Regs used in _desenharMatriz: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1102                           ;desenharMatriz@vetor stored from wreg
  1103  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1104  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1105  05A9  00AE               	movwf	desenharMatriz@vetor
  1106  05AA                     l1035:	
  1107                           
  1108                           ;main.c: 135:         RA0 = 1;
  1109  05AA  3026               	movlw	desenharMatriz@temp& (0+255)
  1110  05AB  0084               	movwf	4
  1111  05AC  3008               	movlw	8
  1112  05AD  00FF               	movwf	btemp+1
  1113  05AE                     u390:	
  1114  05AE  1383               	bcf	3,7	;select IRP bank0
  1115  05AF  0180               	clrf	0
  1116  05B0  0A84               	incf	4,f
  1117  05B1  0BFF               	decfsz	btemp+1,f
  1118  05B2  2DAE               	goto	u390
  1119  05B3                     l1037:	
  1120                           
  1121                           ;main.c: 136:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1122  05B3  3080               	movlw	128
  1123  05B4  00A0               	movwf	??_desenharMatriz
  1124  05B5  0820               	movf	??_desenharMatriz,w
  1125  05B6  00AF               	movwf	desenharMatriz@indice
  1126  05B7                     l1039:	
  1127                           
  1128                           ;main.c: 137:         RA0 = 0;
  1129  05B7  01B0               	clrf	desenharMatriz@i
  1130  05B8                     l1045:	
  1131                           
  1132                           ;main.c: 138:         parteAlta = parteAlta << 1;
  1133  05B8  01B1               	clrf	desenharMatriz@j
  1134  05B9                     l1051:	
  1135                           
  1136                           ;main.c: 139:     }
  1137  05B9  0831               	movf	desenharMatriz@j,w
  1138  05BA  3C07               	sublw	7
  1139  05BB  00A0               	movwf	??_desenharMatriz
  1140  05BC  0AA0               	incf	??_desenharMatriz,f
  1141  05BD  0A30               	incf	desenharMatriz@i,w
  1142  05BE  00A1               	movwf	??_desenharMatriz+1
  1143  05BF  0831               	movf	desenharMatriz@j,w
  1144  05C0  072E               	addwf	desenharMatriz@vetor,w
  1145  05C1  00A2               	movwf	??_desenharMatriz+2
  1146  05C2  0822               	movf	??_desenharMatriz+2,w
  1147  05C3  0084               	movwf	4
  1148  05C4  0800               	movf	0,w
  1149  05C5  052F               	andwf	desenharMatriz@indice,w
  1150  05C6  00A3               	movwf	??_desenharMatriz+3
  1151  05C7  01A4               	clrf	??_desenharMatriz+4
  1152  05C8  2DCC               	goto	u404
  1153  05C9                     u405:	
  1154  05C9  1003               	clrc
  1155  05CA  0DA3               	rlf	??_desenharMatriz+3,f
  1156  05CB  0DA4               	rlf	??_desenharMatriz+4,f
  1157  05CC                     u404:	
  1158  05CC  0BA1               	decfsz	??_desenharMatriz+1,f
  1159  05CD  2DC9               	goto	u405
  1160  05CE  2DD2               	goto	u414
  1161  05CF                     u415:	
  1162  05CF  0D24               	rlf	??_desenharMatriz+4,w
  1163  05D0  0CA4               	rrf	??_desenharMatriz+4,f
  1164  05D1  0CA3               	rrf	??_desenharMatriz+3,f
  1165  05D2                     u414:	
  1166  05D2  0BA0               	decfsz	??_desenharMatriz,f
  1167  05D3  2DCF               	goto	u415
  1168  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1169  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1170  05D6  0823               	movf	??_desenharMatriz+3,w
  1171  05D7  00A5               	movwf	??_desenharMatriz+5
  1172  05D8  0830               	movf	desenharMatriz@i,w
  1173  05D9  3E26               	addlw	(low (desenharMatriz@temp| 0))& (0+255)
  1174  05DA  0084               	movwf	4
  1175  05DB  0825               	movf	??_desenharMatriz+5,w
  1176  05DC  1383               	bcf	3,7	;select IRP bank0
  1177  05DD  0480               	iorwf	0,f
  1178  05DE                     l1053:	
  1179                           
  1180                           ;main.c: 140: 
  1181  05DE  3001               	movlw	1
  1182  05DF  00A0               	movwf	??_desenharMatriz
  1183  05E0  0820               	movf	??_desenharMatriz,w
  1184  05E1  07B1               	addwf	desenharMatriz@j,f
  1185  05E2                     l1055:	
  1186  05E2  3008               	movlw	8
  1187  05E3  0231               	subwf	desenharMatriz@j,w
  1188  05E4  1C03               	skipc
  1189  05E5  2DE7               	goto	u421
  1190  05E6  2DE8               	goto	u420
  1191  05E7                     u421:	
  1192  05E7  2DB9               	goto	l1051
  1193  05E8                     u420:	
  1194  05E8                     l1057:	
  1195                           
  1196                           ;main.c: 141:     for(int i = 0; i < 8; i++){
  1197  05E8  082F               	movf	desenharMatriz@indice,w
  1198  05E9  00A0               	movwf	??_desenharMatriz
  1199  05EA  1003               	clrc
  1200  05EB  0C20               	rrf	??_desenharMatriz,w
  1201  05EC  00A1               	movwf	??_desenharMatriz+1
  1202  05ED  0821               	movf	??_desenharMatriz+1,w
  1203  05EE  00AF               	movwf	desenharMatriz@indice
  1204                           
  1205                           ;main.c: 142:         char temp = parteBaixa & 128;
  1206  05EF  3001               	movlw	1
  1207  05F0  00A0               	movwf	??_desenharMatriz
  1208  05F1  0820               	movf	??_desenharMatriz,w
  1209  05F2  07B0               	addwf	desenharMatriz@i,f
  1210  05F3                     l1059:	
  1211  05F3  3008               	movlw	8
  1212  05F4  0230               	subwf	desenharMatriz@i,w
  1213  05F5  1C03               	skipc
  1214  05F6  2DF8               	goto	u431
  1215  05F7  2DF9               	goto	u430
  1216  05F8                     u431:	
  1217  05F8  2DB8               	goto	l1045
  1218  05F9                     u430:	
  1219  05F9                     l1061:	
  1220                           
  1221                           ;main.c: 143:         RA2 = (temp == 128 ? 1 : 0);
  1222  05F9  01B2               	clrf	desenharMatriz@i_102
  1223  05FA                     l1067:	
  1224                           
  1225                           ;main.c: 144:         RA0 = 1;
  1226  05FA  0832               	movf	desenharMatriz@i_102,w
  1227  05FB  3E26               	addlw	(low (desenharMatriz@temp| 0))& (0+255)
  1228  05FC  0084               	movwf	4
  1229  05FD  1383               	bcf	3,7	;select IRP bank0
  1230  05FE  0800               	movf	0,w
  1231  05FF  00A0               	movwf	??_desenharMatriz
  1232  0600  0820               	movf	??_desenharMatriz,w
  1233  0601  00F1               	movwf	enviarParaDisplay@parteBaixa
  1234  0602  0832               	movf	desenharMatriz@i_102,w
  1235  0603  3E01               	addlw	1
  1236  0604  2612               	fcall	_enviarParaDisplay
  1237  0605                     l1069:	
  1238                           
  1239                           ;main.c: 145:         _delay((unsigned long)((100)*(4000000/4000000.0)));
  1240  0605  3001               	movlw	1
  1241  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0608  00A0               	movwf	??_desenharMatriz
  1244  0609  0820               	movf	??_desenharMatriz,w
  1245  060A  07B2               	addwf	desenharMatriz@i_102,f
  1246  060B                     l1071:	
  1247  060B  3008               	movlw	8
  1248  060C  0232               	subwf	desenharMatriz@i_102,w
  1249  060D  1C03               	skipc
  1250  060E  2E10               	goto	u441
  1251  060F  2E11               	goto	u440
  1252  0610                     u441:	
  1253  0610  2DFA               	goto	l1067
  1254  0611                     u440:	
  1255  0611                     l81:	
  1256  0611  0008               	return
  1257  0612                     __end_of_desenharMatriz:	
  1258                           
  1259                           	psect	text4
  1260  0612                     __ptext4:	
  1261 ;; *************** function _enviarParaDisplay *****************
  1262 ;; Defined at:
  1263 ;;		line 148 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  parteAlta       1    wreg     unsigned char 
  1266 ;;  parteBaixa      1    1[COMMON] unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  parteAlta       1   10[COMMON] unsigned char 
  1269 ;;  temp            1    5[COMMON] unsigned char 
  1270 ;;  temp            1    4[COMMON] unsigned char 
  1271 ;;  i               2    8[COMMON] int 
  1272 ;;  i               2    6[COMMON] int 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1282 ;;      Params:         1       0       0       0
  1283 ;;      Locals:         7       0       0       0
  1284 ;;      Temps:          2       0       0       0
  1285 ;;      Totals:        10       0       0       0
  1286 ;;Total ram usage:       10 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    1
  1289 ;; This function calls:
  1290 ;;		_finalizarEnvio
  1291 ;; This function is called by:
  1292 ;;		_inicializarDisplay
  1293 ;;		_desenharMatriz
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _enviarParaDisplay
  1299  0612                     _enviarParaDisplay:	
  1300                           
  1301                           ;incstack = 0
  1302                           ; Regs used in _enviarParaDisplay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1303                           ;enviarParaDisplay@parteAlta stored from wreg
  1304  0612  00FA               	movwf	enviarParaDisplay@parteAlta
  1305  0613                     l967:	
  1306                           
  1307                           ;main.c: 149:     finalizarEnvio();
  1308  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0615  1005               	bcf	5,0	;volatile
  1311  0616                     l969:	
  1312                           
  1313                           ;main.c: 150: }
  1314  0616  01F6               	clrf	enviarParaDisplay@i
  1315  0617  01F7               	clrf	enviarParaDisplay@i+1
  1316  0618                     l975:	
  1317                           
  1318                           ;main.c: 151: 
  1319  0618  087A               	movf	enviarParaDisplay@parteAlta,w
  1320  0619  3980               	andlw	128
  1321  061A  00F2               	movwf	??_enviarParaDisplay
  1322  061B  0872               	movf	??_enviarParaDisplay,w
  1323  061C  00F4               	movwf	enviarParaDisplay@temp
  1324  061D                     l977:	
  1325                           
  1326                           ;main.c: 152: void finalizarEnvio(){
  1327  061D  3080               	movlw	128
  1328  061E  0674               	xorwf	enviarParaDisplay@temp,w
  1329  061F  1903               	btfsc	3,2
  1330  0620  2E22               	goto	u321
  1331  0621  2E26               	goto	u320
  1332  0622                     u321:	
  1333  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0624  1505               	bsf	5,2	;volatile
  1336  0625  2E29               	goto	u334
  1337  0626                     u320:	
  1338  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1340  0628  1105               	bcf	5,2	;volatile
  1341  0629                     u334:	
  1342  0629                     l979:	
  1343                           
  1344                           ;main.c: 153:     RA1 = 1;
  1345  0629  1405               	bsf	5,0	;volatile
  1346  062A                     l981:	
  1347                           
  1348                           ;main.c: 154:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1349  062A  3021               	movlw	33
  1350  062B  00F2               	movwf	??_enviarParaDisplay
  1351  062C                     u647:	
  1352  062C  0BF2               	decfsz	??_enviarParaDisplay,f
  1353  062D  2E2C               	goto	u647
  1354  062E                     l983:	
  1355                           
  1356                           ;main.c: 155:     RA1 = 0;
  1357  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1358  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0630  1005               	bcf	5,0	;volatile
  1360  0631                     l985:	
  1361                           
  1362                           ;main.c: 156: }
  1363  0631  087A               	movf	enviarParaDisplay@parteAlta,w
  1364  0632  00F2               	movwf	??_enviarParaDisplay
  1365  0633  0772               	addwf	??_enviarParaDisplay,w
  1366  0634  00F3               	movwf	??_enviarParaDisplay+1
  1367  0635  0873               	movf	??_enviarParaDisplay+1,w
  1368  0636  00FA               	movwf	enviarParaDisplay@parteAlta
  1369  0637                     l987:	
  1370  0637  3001               	movlw	1
  1371  0638  07F6               	addwf	enviarParaDisplay@i,f
  1372  0639  1803               	skipnc
  1373  063A  0AF7               	incf	enviarParaDisplay@i+1,f
  1374  063B  3000               	movlw	0
  1375  063C  07F7               	addwf	enviarParaDisplay@i+1,f
  1376  063D                     l989:	
  1377  063D  0877               	movf	enviarParaDisplay@i+1,w
  1378  063E  3A80               	xorlw	128
  1379  063F  00FF               	movwf	btemp+1
  1380  0640  3080               	movlw	128
  1381  0641  027F               	subwf	btemp+1,w
  1382  0642  1D03               	skipz
  1383  0643  2E46               	goto	u345
  1384  0644  3008               	movlw	8
  1385  0645  0276               	subwf	enviarParaDisplay@i,w
  1386  0646                     u345:	
  1387  0646  1C03               	skipc
  1388  0647  2E49               	goto	u341
  1389  0648  2E4A               	goto	u340
  1390  0649                     u341:	
  1391  0649  2E18               	goto	l975
  1392  064A                     u340:	
  1393  064A                     l991:	
  1394  064A  01F8               	clrf	enviarParaDisplay@i_108
  1395  064B  01F9               	clrf	enviarParaDisplay@i_108+1
  1396  064C                     l997:	
  1397  064C  0871               	movf	enviarParaDisplay@parteBaixa,w
  1398  064D  3980               	andlw	128
  1399  064E  00F2               	movwf	??_enviarParaDisplay
  1400  064F  0872               	movf	??_enviarParaDisplay,w
  1401  0650  00F5               	movwf	enviarParaDisplay@temp_109
  1402  0651                     l999:	
  1403  0651  3080               	movlw	128
  1404  0652  0675               	xorwf	enviarParaDisplay@temp_109,w
  1405  0653  1903               	btfsc	3,2
  1406  0654  2E56               	goto	u351
  1407  0655  2E5A               	goto	u350
  1408  0656                     u351:	
  1409  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0658  1505               	bsf	5,2	;volatile
  1412  0659  2E5D               	goto	u364
  1413  065A                     u350:	
  1414  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1415  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1416  065C  1105               	bcf	5,2	;volatile
  1417  065D                     u364:	
  1418  065D                     l1001:	
  1419  065D  1405               	bsf	5,0	;volatile
  1420  065E                     l1003:	
  1421  065E  3021               	movlw	33
  1422  065F  00F2               	movwf	??_enviarParaDisplay
  1423  0660                     u657:	
  1424  0660  0BF2               	decfsz	??_enviarParaDisplay,f
  1425  0661  2E60               	goto	u657
  1426  0662                     l1005:	
  1427  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0664  1005               	bcf	5,0	;volatile
  1430  0665                     l1007:	
  1431  0665  0871               	movf	enviarParaDisplay@parteBaixa,w
  1432  0666  00F2               	movwf	??_enviarParaDisplay
  1433  0667  0772               	addwf	??_enviarParaDisplay,w
  1434  0668  00F3               	movwf	??_enviarParaDisplay+1
  1435  0669  0873               	movf	??_enviarParaDisplay+1,w
  1436  066A  00F1               	movwf	enviarParaDisplay@parteBaixa
  1437  066B                     l1009:	
  1438  066B  3001               	movlw	1
  1439  066C  07F8               	addwf	enviarParaDisplay@i_108,f
  1440  066D  1803               	skipnc
  1441  066E  0AF9               	incf	enviarParaDisplay@i_108+1,f
  1442  066F  3000               	movlw	0
  1443  0670  07F9               	addwf	enviarParaDisplay@i_108+1,f
  1444  0671                     l1011:	
  1445  0671  0879               	movf	enviarParaDisplay@i_108+1,w
  1446  0672  3A80               	xorlw	128
  1447  0673  00FF               	movwf	btemp+1
  1448  0674  3080               	movlw	128
  1449  0675  027F               	subwf	btemp+1,w
  1450  0676  1D03               	skipz
  1451  0677  2E7A               	goto	u375
  1452  0678  3008               	movlw	8
  1453  0679  0278               	subwf	enviarParaDisplay@i_108,w
  1454  067A                     u375:	
  1455  067A  1C03               	skipc
  1456  067B  2E7D               	goto	u371
  1457  067C  2E7E               	goto	u370
  1458  067D                     u371:	
  1459  067D  2E4C               	goto	l997
  1460  067E                     u370:	
  1461  067E                     l1013:	
  1462  067E  250F               	fcall	_finalizarEnvio
  1463  067F                     l88:	
  1464  067F  0008               	return
  1465  0680                     __end_of_enviarParaDisplay:	
  1466                           
  1467                           	psect	text5
  1468  050F                     __ptext5:	
  1469 ;; *************** function _finalizarEnvio *****************
  1470 ;; Defined at:
  1471 ;;		line 170 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1485 ;;      Params:         0       0       0       0
  1486 ;;      Locals:         0       0       0       0
  1487 ;;      Temps:          1       0       0       0
  1488 ;;      Totals:         1       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_enviarParaDisplay
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _finalizarEnvio
  1500  050F                     _finalizarEnvio:	
  1501  050F                     l961:	
  1502                           ;incstack = 0
  1503                           ; Regs used in _finalizarEnvio: [wreg]
  1504                           
  1505  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0511  1485               	bsf	5,1	;volatile
  1508  0512                     l963:	
  1509  0512  3021               	movlw	33
  1510  0513  00F0               	movwf	??_finalizarEnvio
  1511  0514                     u667:	
  1512  0514  0BF0               	decfsz	??_finalizarEnvio,f
  1513  0515  2D14               	goto	u667
  1514  0516                     l965:	
  1515  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0518  1085               	bcf	5,1	;volatile
  1518  0519                     l91:	
  1519  0519  0008               	return
  1520  051A                     __end_of_finalizarEnvio:	
  1521                           
  1522                           	psect	text6
  1523  0540                     __ptext6:	
  1524 ;; *************** function ___awdiv *****************
  1525 ;; Defined at:
  1526 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  divisor         2    0[COMMON] int 
  1529 ;;  dividend        2    2[COMMON] int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  quotient        2    7[COMMON] int 
  1532 ;;  sign            1    6[COMMON] unsigned char 
  1533 ;;  counter         1    5[COMMON] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2    0[COMMON] int 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1543 ;;      Params:         4       0       0       0
  1544 ;;      Locals:         4       0       0       0
  1545 ;;      Temps:          1       0       0       0
  1546 ;;      Totals:         9       0       0       0
  1547 ;;Total ram usage:        9 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function ___awdiv
  1558  0540                     ___awdiv:	
  1559  0540                     l1073:	
  1560                           ;incstack = 0
  1561                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1562                           
  1563  0540  01F6               	clrf	___awdiv@sign
  1564  0541                     l1075:	
  1565  0541  1FF1               	btfss	___awdiv@divisor+1,7
  1566  0542  2D44               	goto	u451
  1567  0543  2D45               	goto	u450
  1568  0544                     u451:	
  1569  0544  2D4C               	goto	l1081
  1570  0545                     u450:	
  1571  0545                     l1077:	
  1572  0545  09F0               	comf	___awdiv@divisor,f
  1573  0546  09F1               	comf	___awdiv@divisor+1,f
  1574  0547  0AF0               	incf	___awdiv@divisor,f
  1575  0548  1903               	skipnz
  1576  0549  0AF1               	incf	___awdiv@divisor+1,f
  1577  054A                     l1079:	
  1578  054A  01F6               	clrf	___awdiv@sign
  1579  054B  0AF6               	incf	___awdiv@sign,f
  1580  054C                     l1081:	
  1581  054C  1FF3               	btfss	___awdiv@dividend+1,7
  1582  054D  2D4F               	goto	u461
  1583  054E  2D50               	goto	u460
  1584  054F                     u461:	
  1585  054F  2D59               	goto	l1087
  1586  0550                     u460:	
  1587  0550                     l1083:	
  1588  0550  09F2               	comf	___awdiv@dividend,f
  1589  0551  09F3               	comf	___awdiv@dividend+1,f
  1590  0552  0AF2               	incf	___awdiv@dividend,f
  1591  0553  1903               	skipnz
  1592  0554  0AF3               	incf	___awdiv@dividend+1,f
  1593  0555                     l1085:	
  1594  0555  3001               	movlw	1
  1595  0556  00F4               	movwf	??___awdiv
  1596  0557  0874               	movf	??___awdiv,w
  1597  0558  06F6               	xorwf	___awdiv@sign,f
  1598  0559                     l1087:	
  1599  0559  01F7               	clrf	___awdiv@quotient
  1600  055A  01F8               	clrf	___awdiv@quotient+1
  1601  055B                     l1089:	
  1602  055B  0870               	movf	___awdiv@divisor,w
  1603  055C  0471               	iorwf	___awdiv@divisor+1,w
  1604  055D  1903               	btfsc	3,2
  1605  055E  2D60               	goto	u471
  1606  055F  2D61               	goto	u470
  1607  0560                     u471:	
  1608  0560  2D98               	goto	l1109
  1609  0561                     u470:	
  1610  0561                     l1091:	
  1611  0561  01F5               	clrf	___awdiv@counter
  1612  0562  0AF5               	incf	___awdiv@counter,f
  1613  0563  2D6F               	goto	l1097
  1614  0564                     l1093:	
  1615  0564  3001               	movlw	1
  1616  0565                     u485:	
  1617  0565  1003               	clrc
  1618  0566  0DF0               	rlf	___awdiv@divisor,f
  1619  0567  0DF1               	rlf	___awdiv@divisor+1,f
  1620  0568  3EFF               	addlw	-1
  1621  0569  1D03               	skipz
  1622  056A  2D65               	goto	u485
  1623  056B                     l1095:	
  1624  056B  3001               	movlw	1
  1625  056C  00F4               	movwf	??___awdiv
  1626  056D  0874               	movf	??___awdiv,w
  1627  056E  07F5               	addwf	___awdiv@counter,f
  1628  056F                     l1097:	
  1629  056F  1FF1               	btfss	___awdiv@divisor+1,7
  1630  0570  2D72               	goto	u491
  1631  0571  2D73               	goto	u490
  1632  0572                     u491:	
  1633  0572  2D64               	goto	l1093
  1634  0573                     u490:	
  1635  0573                     l1099:	
  1636  0573  3001               	movlw	1
  1637  0574                     u505:	
  1638  0574  1003               	clrc
  1639  0575  0DF7               	rlf	___awdiv@quotient,f
  1640  0576  0DF8               	rlf	___awdiv@quotient+1,f
  1641  0577  3EFF               	addlw	-1
  1642  0578  1D03               	skipz
  1643  0579  2D74               	goto	u505
  1644  057A  0871               	movf	___awdiv@divisor+1,w
  1645  057B  0273               	subwf	___awdiv@dividend+1,w
  1646  057C  1D03               	skipz
  1647  057D  2D80               	goto	u515
  1648  057E  0870               	movf	___awdiv@divisor,w
  1649  057F  0272               	subwf	___awdiv@dividend,w
  1650  0580                     u515:	
  1651  0580  1C03               	skipc
  1652  0581  2D83               	goto	u511
  1653  0582  2D84               	goto	u510
  1654  0583                     u511:	
  1655  0583  2D8B               	goto	l1105
  1656  0584                     u510:	
  1657  0584                     l1101:	
  1658  0584  0870               	movf	___awdiv@divisor,w
  1659  0585  02F2               	subwf	___awdiv@dividend,f
  1660  0586  0871               	movf	___awdiv@divisor+1,w
  1661  0587  1C03               	skipc
  1662  0588  03F3               	decf	___awdiv@dividend+1,f
  1663  0589  02F3               	subwf	___awdiv@dividend+1,f
  1664  058A                     l1103:	
  1665  058A  1477               	bsf	___awdiv@quotient,0
  1666  058B                     l1105:	
  1667  058B  3001               	movlw	1
  1668  058C                     u525:	
  1669  058C  1003               	clrc
  1670  058D  0CF1               	rrf	___awdiv@divisor+1,f
  1671  058E  0CF0               	rrf	___awdiv@divisor,f
  1672  058F  3EFF               	addlw	-1
  1673  0590  1D03               	skipz
  1674  0591  2D8C               	goto	u525
  1675  0592                     l1107:	
  1676  0592  3001               	movlw	1
  1677  0593  02F5               	subwf	___awdiv@counter,f
  1678  0594  1D03               	btfss	3,2
  1679  0595  2D97               	goto	u531
  1680  0596  2D98               	goto	u530
  1681  0597                     u531:	
  1682  0597  2D73               	goto	l1099
  1683  0598                     u530:	
  1684  0598                     l1109:	
  1685  0598  0876               	movf	___awdiv@sign,w
  1686  0599  1903               	btfsc	3,2
  1687  059A  2D9C               	goto	u541
  1688  059B  2D9D               	goto	u540
  1689  059C                     u541:	
  1690  059C  2DA2               	goto	l1113
  1691  059D                     u540:	
  1692  059D                     l1111:	
  1693  059D  09F7               	comf	___awdiv@quotient,f
  1694  059E  09F8               	comf	___awdiv@quotient+1,f
  1695  059F  0AF7               	incf	___awdiv@quotient,f
  1696  05A0  1903               	skipnz
  1697  05A1  0AF8               	incf	___awdiv@quotient+1,f
  1698  05A2                     l1113:	
  1699  05A2  0878               	movf	___awdiv@quotient+1,w
  1700  05A3  00F1               	movwf	?___awdiv+1
  1701  05A4  0877               	movf	___awdiv@quotient,w
  1702  05A5  00F0               	movwf	?___awdiv
  1703  05A6                     l330:	
  1704  05A6  0008               	return
  1705  05A7                     __end_of___awdiv:	
  1706  007E                     btemp	set	126	;btemp
  1707  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      38
    BANK1            80     76      78
    BANK2            48      0       0

Pointer List with Targets:

    desenharMatriz@vetor	PTR unsigned char  size(1) Largest target is 8
		 -> main@mapa(BANK1[8]), 

    renderizar@mapa	PTR unsigned char  size(1) Largest target is 8
		 -> main@mapa(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_inicializarDisplay
    _inicializarDisplay->_enviarParaDisplay
    _desenharMatriz->_enviarParaDisplay
    _enviarParaDisplay->_finalizarEnvio

Critical Paths under _main in BANK0

    _main->_desenharMatriz

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0    3326
                                             19 BANK0      3     3      0
                                              0 BANK1     76    76      0
                            ___awdiv
                     _desenharMatriz
                 _inicializarDisplay
                         _renderizar
 ---------------------------------------------------------------------------------
 (1) _renderizar                                           8     6      2     285
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _inicializarDisplay                                   3     3      0     670
                                             11 COMMON     3     3      0
                  _enviarParaDisplay
 ---------------------------------------------------------------------------------
 (1) _desenharMatriz                                      19    19      0     951
                                              0 BANK0     19    19      0
                  _enviarParaDisplay
 ---------------------------------------------------------------------------------
 (2) _enviarParaDisplay                                   10     9      1     532
                                              1 COMMON    10     9      1
                     _finalizarEnvio
 ---------------------------------------------------------------------------------
 (3) _finalizarEnvio                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _desenharMatriz
     _enviarParaDisplay
       _finalizarEnvio
   _inicializarDisplay
     _enviarParaDisplay
       _finalizarEnvio
   _renderizar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4C      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      26       3       47.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      82      10        0.0%
ABS                  0      0      82       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 02:50:18 2019

                __CFG_CP$OFF 0000                           l70 0527                           l81 0611  
                         l91 0519                           l67 053F                           l88 067F  
               ___awdiv@sign 0076                           fsr 0004                          l330 05A6  
                        l961 050F                          l963 0512                          l965 0516  
                        l981 062A                          l991 064A                          l983 062E  
                        l975 0618                          l967 0613                          l985 0631  
                        l977 061D                          l969 0616                          l987 0637  
                        l979 0629                          _GIE 005F                          l997 064C  
                        l989 063D                          l999 0651                          _RA0 0028  
                        _RA1 0029                          _RA2 002A                          u320 0626  
                        u321 0622                          u340 064A                          u420 05E8  
                        u404 05CC                          u341 0649                          u421 05E7  
                        u405 05C9                          u510 0584                          u350 065A  
                        u334 0629                          u430 05F9                          u414 05D2  
                        u511 0583                          u351 0656                          u431 05F8  
                        u415 05CF                          u440 0611                          u600 0766  
                        u505 0574                          u345 0646                          u441 0610  
                        u601 0765                          u530 0598                          u450 0545  
                        u370 067E                          u531 0597                          u515 0580  
                        u451 0544                          u371 067D                          u540 059D  
                        u460 0550                          u364 065D                          u620 07F1  
                        u541 059C                          u525 058C                          u461 054F  
                        u621 07F0                          u470 0561                          u390 05AE  
                        u550 06A9                          u471 0560                          u375 067A  
                        u615 07CD                          u384 0533                          u560 06BC  
                        u385 0530                          u561 06BB                          u490 0573  
                        u570 06C2                          u491 0572                          u571 06C1  
                        u580 0722                          u485 0565                          u637 07C0  
                        u581 0721                          u590 0730                          u647 062C  
                        u591 072F                          u657 0660                          u667 0514  
                        _dir 00EC                          fsr0 0004                          indf 0000  
               __CFG_LVP$OFF 0000                         l1001 065D                         l1011 0671  
                       l1003 065E                         l1101 0584                         l1013 067E  
                       l1005 0662                         l1021 051E                         l1111 059D  
                       l1103 058A                         l1007 0665                         l1031 0521  
                       l1023 051E                         l1015 051A                         l1113 05A2  
                       l1105 058B                         l1009 066B                         l1025 051E  
                       l1017 051A                         l1033 0529                         l1201 07EB  
                       l1121 0691                         l1107 0592                         l1051 05B9  
                       l1035 05AA                         l1027 0521                         l1019 051A  
                       l1131 06A4                         l1123 0699                         l1109 0598  
                       l1061 05F9                         l1053 05DE                         l1045 05B8  
                       l1037 05B3                         l1029 0521                         l1141 06B3  
                       l1133 06A5                         l1125 069D                         l1117 0680  
                       l1071 060B                         l1055 05E2                         l1039 05B7  
                       l1151 06F2                         l1143 06B4                         l1135 06AE  
                       l1127 06A2                         l1119 0690                         l1081 054C  
                       l1073 0540                         l1057 05E8                         l1161 071C  
                       l1145 06BC                         l1153 06FB                         l1137 06AF  
                       l1129 06A3                         l1091 0561                         l1083 0550  
                       l1075 0541                         l1067 05FA                         l1059 05F3  
                       l1171 0761                         l1163 0722                         l1155 0701  
                       l1147 06C2                         l1139 06B2                         l1093 0564  
                       l1085 0555                         l1077 0545                         l1069 0605  
                       l1173 0767                         l1157 0705                         l1149 06DC  
                       l1095 056B                         l1087 0559                         l1079 054A  
                       l1191 07DD                         l1239 07A8                         l1175 0773  
                       l1183 07A3                         l1167 0731                         l1159 0714  
                       l1097 056F                         l1089 055B                         l1177 0785  
                       l1185 07B6                         l1169 075D                         l1099 0573  
                       l1187 07B8                         l1179 0797                         l1197 07DE  
                       l1189 07C6                         l1199 07E3                         _RBIE 005B  
                       _RBIF 0058                         _main 0680                  main@semente 00E8  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 0000  
                      ?_main 0070              __end_of___awdiv 05A7                __CFG_WDTE$OFF 0000  
                      _CMCON 001F              ___awdiv@divisor 0070              ___awdiv@counter 0075  
                      _TMR1H 000F                        _TMR1L 000E                        _TRISA 0085  
                      _TRISB 0086                __CFG_PWRTE$ON 0000              desenharMatriz@i 0030  
            desenharMatriz@j 0031                        main@i 00EB                        status 0003  
                      wtemp0 007E        enviarParaDisplay@temp 0074               __CFG_MCLRE$OFF 0000  
            __initialization 07F3           _inicializarDisplay 051A                 __end_of_main 07F3  
                     ??_main 0033          ?_inicializarDisplay 0070             ___awdiv@dividend 0072  
                     _TMR1ON 0080         ??_inicializarDisplay 007B                    ??___awdiv 0074  
           ___awdiv@quotient 0077             ??_finalizarEnvio 0070       enviarParaDisplay@i_108 0078  
    __end_of__initialization 07FE               __pcstackCOMMON 0070                 __pidataBANK1 0505  
    __size_of_desenharMatriz 006B                   __pbssBANK0 0036                   __pmaintext 0680  
                    ___awdiv 0540                      __ptext1 0528                      __ptext2 051A  
                    __ptext3 05A7                      __ptext4 0612                      __ptext5 050F  
                    __ptext6 0540                      clrloop0 0508                      main@ovo 00E9  
       end_of_initialization 07FE                   _renderizar 0528         desenharMatriz@indice 002F  
enviarParaDisplay@parteBaixa 0071                renderizar@aux 0070            _enviarParaDisplay 0612  
             _desenharMatriz 05A7           ?_enviarParaDisplay 0071  __size_of_inicializarDisplay 000E  
        ??_enviarParaDisplay 0072    __end_of_enviarParaDisplay 0680          start_initialization 07F3  
     __end_of_desenharMatriz 0612    enviarParaDisplay@temp_109 0075                _tamanho_kobra 00ED  
                ?_renderizar 0070                  __pdataBANK1 00EC                    ___latbits 0000  
              __pcstackBANK0 0020                __pcstackBANK1 00A0              ?_desenharMatriz 0070  
         enviarParaDisplay@i 0076      __size_of_finalizarEnvio 000B                     ?___awdiv 0070  
        __size_of_renderizar 0018   __size_of_enviarParaDisplay 006E          desenharMatriz@i_102 0032  
                  clear_ram0 0507          desenharMatriz@vetor 002E   enviarParaDisplay@parteAlta 007A  
                  main@kobra 00A0             __size_of___awdiv 0067   __end_of_inicializarDisplay 0528  
             _finalizarEnvio 050F                 ??_renderizar 0072           desenharMatriz@F504 0036  
              __size_of_main 0173           desenharMatriz@temp 0026                     main@F493 003E  
                   main@mapa 00E0             ??_desenharMatriz 0020           __end_of_renderizar 0540  
     __end_of_finalizarEnvio 051A              ?_finalizarEnvio 0070               renderizar@mapa 0077  
         __CFG_FOSC$INTOSCIO 0000  
